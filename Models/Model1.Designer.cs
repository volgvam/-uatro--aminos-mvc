//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_Administrators_Названия_танцев", "Названия_танцев", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.Названия_танцев), "Administrators", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.Administrators), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_Administrators_Списки_людей", "Списки_людей", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.Списки_людей), "Administrators", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.Administrators), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_Cash_CashCategory", "CashCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.CashCategory), "Cash", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.Cash), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_Cash_Названия_танцев", "Названия_танцев", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.Названия_танцев), "Cash", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.Cash), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_Cash_Списки_людей", "Списки_людей", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.Списки_людей), "Cash", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.Cash), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_CashCategory_CashCategory", "CashCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.CashCategory), "CashCategory1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CuatroCaminosMvcApplication.Models.CashCategory), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_Notes_NotesCategory", "NotesCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.NotesCategory), "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.Notes), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_Notes_Списки_людей", "Списки_людей", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.Списки_людей), "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.Notes), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_NotesCategory_NotesCategory1", "NotesCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.NotesCategory), "NotesCategory1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CuatroCaminosMvcApplication.Models.NotesCategory), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_PriceHistory_Price", "Price", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.Price), "PriceHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.PriceHistory), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_PriceHistory_Названия_танцев", "Названия_танцев", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.Названия_танцев), "PriceHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.PriceHistory), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_Visits_Названия_танцев", "Названия_танцев", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.Названия_танцев), "Visits", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.Visits), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_Visits_Списки_людей", "Списки_людей", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.Списки_людей), "Visits", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.Visits), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_Имена_Преподавателей", "Имена_преподавателей", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.Имена_преподавателей), "Оплата", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.Оплата), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_Календарь_занятий_Названия_танцев", "Названия_танцев", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.Названия_танцев), "Календарь_занятий", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.Календарь_занятий), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "Контактные_лица_FK00", "Организации", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CuatroCaminosMvcApplication.Models.Организации), "Контактные_лица", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.Контактные_лица), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "Мероприятия_FK01", "Наличие_авто", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CuatroCaminosMvcApplication.Models.Наличие_авто), "Мероприятия", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.Мероприятия), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_Sms", "Название_SMS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.Название_SMS), "Списки_людей", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.Списки_людей), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_СписокНаМероприятие_Название_мероприятий", "Название_мероприятий", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.Название_мероприятий), "СписокНаМероприятие", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.СписокНаМероприятие), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_Название_месяцев", "Название_месяцев", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.Название_месяцев), "Оплата", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.Оплата), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK03_Районы", "Название_района", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CuatroCaminosMvcApplication.Models.Название_района), "Списки_людей", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.Списки_людей), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK04_Школы", "Название_школ", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CuatroCaminosMvcApplication.Models.Название_школ), "Списки_людей", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.Списки_людей), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_Название_танцев_Оплата", "Названия_танцев", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.Названия_танцев), "Оплата", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.Оплата), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_Оплата_Списки_людей", "Списки_людей", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.Списки_людей), "Оплата", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.Оплата), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_Оплата_Списки_людей_Login", "Списки_людей", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.Списки_людей), "Оплата", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.Оплата), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "Цены_FK00", "Организации", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CuatroCaminosMvcApplication.Models.Организации), "Цены", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.Цены), true)]
[assembly: EdmRelationshipAttribute("Cuatro_Caminos_BDModel", "FK_СписокНаМероприятие_Списки_людей", "Списки_людей", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CuatroCaminosMvcApplication.Models.Списки_людей), "СписокНаМероприятие", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CuatroCaminosMvcApplication.Models.СписокНаМероприятие), true)]

#endregion

namespace CuatroCaminosMvcApplication.Models
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class Cuatro_Caminos_BDEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект Cuatro_Caminos_BDEntities, используя строку соединения из раздела "Cuatro_Caminos_BDEntities" файла конфигурации приложения.
        /// </summary>
        public Cuatro_Caminos_BDEntities() : base("name=Cuatro_Caminos_BDEntities", "Cuatro_Caminos_BDEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта Cuatro_Caminos_BDEntities.
        /// </summary>
        public Cuatro_Caminos_BDEntities(string connectionString) : base(connectionString, "Cuatro_Caminos_BDEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта Cuatro_Caminos_BDEntities.
        /// </summary>
        public Cuatro_Caminos_BDEntities(EntityConnection connection) : base(connection, "Cuatro_Caminos_BDEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Administrators> Administrators
        {
            get
            {
                if ((_Administrators == null))
                {
                    _Administrators = base.CreateObjectSet<Administrators>("Administrators");
                }
                return _Administrators;
            }
        }
        private ObjectSet<Administrators> _Administrators;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Cash> Cash
        {
            get
            {
                if ((_Cash == null))
                {
                    _Cash = base.CreateObjectSet<Cash>("Cash");
                }
                return _Cash;
            }
        }
        private ObjectSet<Cash> _Cash;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<CashCategory> CashCategory
        {
            get
            {
                if ((_CashCategory == null))
                {
                    _CashCategory = base.CreateObjectSet<CashCategory>("CashCategory");
                }
                return _CashCategory;
            }
        }
        private ObjectSet<CashCategory> _CashCategory;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Notes> Notes
        {
            get
            {
                if ((_Notes == null))
                {
                    _Notes = base.CreateObjectSet<Notes>("Notes");
                }
                return _Notes;
            }
        }
        private ObjectSet<Notes> _Notes;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<NotesCategory> NotesCategory
        {
            get
            {
                if ((_NotesCategory == null))
                {
                    _NotesCategory = base.CreateObjectSet<NotesCategory>("NotesCategory");
                }
                return _NotesCategory;
            }
        }
        private ObjectSet<NotesCategory> _NotesCategory;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Price> Price
        {
            get
            {
                if ((_Price == null))
                {
                    _Price = base.CreateObjectSet<Price>("Price");
                }
                return _Price;
            }
        }
        private ObjectSet<Price> _Price;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PriceHistory> PriceHistory
        {
            get
            {
                if ((_PriceHistory == null))
                {
                    _PriceHistory = base.CreateObjectSet<PriceHistory>("PriceHistory");
                }
                return _PriceHistory;
            }
        }
        private ObjectSet<PriceHistory> _PriceHistory;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Visits> Visits
        {
            get
            {
                if ((_Visits == null))
                {
                    _Visits = base.CreateObjectSet<Visits>("Visits");
                }
                return _Visits;
            }
        }
        private ObjectSet<Visits> _Visits;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Выступления> Выступления
        {
            get
            {
                if ((_Выступления == null))
                {
                    _Выступления = base.CreateObjectSet<Выступления>("Выступления");
                }
                return _Выступления;
            }
        }
        private ObjectSet<Выступления> _Выступления;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Имена_преподавателей> Имена_преподавателей
        {
            get
            {
                if ((_Имена_преподавателей == null))
                {
                    _Имена_преподавателей = base.CreateObjectSet<Имена_преподавателей>("Имена_преподавателей");
                }
                return _Имена_преподавателей;
            }
        }
        private ObjectSet<Имена_преподавателей> _Имена_преподавателей;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Календарь_занятий> Календарь_занятий
        {
            get
            {
                if ((_Календарь_занятий == null))
                {
                    _Календарь_занятий = base.CreateObjectSet<Календарь_занятий>("Календарь_занятий");
                }
                return _Календарь_занятий;
            }
        }
        private ObjectSet<Календарь_занятий> _Календарь_занятий;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Контактные_лица> Контактные_лица
        {
            get
            {
                if ((_Контактные_лица == null))
                {
                    _Контактные_лица = base.CreateObjectSet<Контактные_лица>("Контактные_лица");
                }
                return _Контактные_лица;
            }
        }
        private ObjectSet<Контактные_лица> _Контактные_лица;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Контакты> Контакты
        {
            get
            {
                if ((_Контакты == null))
                {
                    _Контакты = base.CreateObjectSet<Контакты>("Контакты");
                }
                return _Контакты;
            }
        }
        private ObjectSet<Контакты> _Контакты;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Мероприятия> Мероприятия
        {
            get
            {
                if ((_Мероприятия == null))
                {
                    _Мероприятия = base.CreateObjectSet<Мероприятия>("Мероприятия");
                }
                return _Мероприятия;
            }
        }
        private ObjectSet<Мероприятия> _Мероприятия;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Название_SMS> Название_SMS
        {
            get
            {
                if ((_Название_SMS == null))
                {
                    _Название_SMS = base.CreateObjectSet<Название_SMS>("Название_SMS");
                }
                return _Название_SMS;
            }
        }
        private ObjectSet<Название_SMS> _Название_SMS;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Название_мероприятий> Название_мероприятий
        {
            get
            {
                if ((_Название_мероприятий == null))
                {
                    _Название_мероприятий = base.CreateObjectSet<Название_мероприятий>("Название_мероприятий");
                }
                return _Название_мероприятий;
            }
        }
        private ObjectSet<Название_мероприятий> _Название_мероприятий;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Название_месяцев> Название_месяцев
        {
            get
            {
                if ((_Название_месяцев == null))
                {
                    _Название_месяцев = base.CreateObjectSet<Название_месяцев>("Название_месяцев");
                }
                return _Название_месяцев;
            }
        }
        private ObjectSet<Название_месяцев> _Название_месяцев;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Название_напитков> Название_напитков
        {
            get
            {
                if ((_Название_напитков == null))
                {
                    _Название_напитков = base.CreateObjectSet<Название_напитков>("Название_напитков");
                }
                return _Название_напитков;
            }
        }
        private ObjectSet<Название_напитков> _Название_напитков;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Название_района> Название_района
        {
            get
            {
                if ((_Название_района == null))
                {
                    _Название_района = base.CreateObjectSet<Название_района>("Название_района");
                }
                return _Название_района;
            }
        }
        private ObjectSet<Название_района> _Название_района;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Название_школ> Название_школ
        {
            get
            {
                if ((_Название_школ == null))
                {
                    _Название_школ = base.CreateObjectSet<Название_школ>("Название_школ");
                }
                return _Название_школ;
            }
        }
        private ObjectSet<Название_школ> _Название_школ;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Названия_танцев> Названия_танцев
        {
            get
            {
                if ((_Названия_танцев == null))
                {
                    _Названия_танцев = base.CreateObjectSet<Названия_танцев>("Названия_танцев");
                }
                return _Названия_танцев;
            }
        }
        private ObjectSet<Названия_танцев> _Названия_танцев;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Наличие_авто> Наличие_авто
        {
            get
            {
                if ((_Наличие_авто == null))
                {
                    _Наличие_авто = base.CreateObjectSet<Наличие_авто>("Наличие_авто");
                }
                return _Наличие_авто;
            }
        }
        private ObjectSet<Наличие_авто> _Наличие_авто;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Оплата> Оплата
        {
            get
            {
                if ((_Оплата == null))
                {
                    _Оплата = base.CreateObjectSet<Оплата>("Оплата");
                }
                return _Оплата;
            }
        }
        private ObjectSet<Оплата> _Оплата;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Организации> Организации
        {
            get
            {
                if ((_Организации == null))
                {
                    _Организации = base.CreateObjectSet<Организации>("Организации");
                }
                return _Организации;
            }
        }
        private ObjectSet<Организации> _Организации;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Списки_людей> Списки_людей
        {
            get
            {
                if ((_Списки_людей == null))
                {
                    _Списки_людей = base.CreateObjectSet<Списки_людей>("Списки_людей");
                }
                return _Списки_людей;
            }
        }
        private ObjectSet<Списки_людей> _Списки_людей;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Список_дат> Список_дат
        {
            get
            {
                if ((_Список_дат == null))
                {
                    _Список_дат = base.CreateObjectSet<Список_дат>("Список_дат");
                }
                return _Список_дат;
            }
        }
        private ObjectSet<Список_дат> _Список_дат;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Список_лет> Список_лет
        {
            get
            {
                if ((_Список_лет == null))
                {
                    _Список_лет = base.CreateObjectSet<Список_лет>("Список_лет");
                }
                return _Список_лет;
            }
        }
        private ObjectSet<Список_лет> _Список_лет;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Список_месяцев> Список_месяцев
        {
            get
            {
                if ((_Список_месяцев == null))
                {
                    _Список_месяцев = base.CreateObjectSet<Список_месяцев>("Список_месяцев");
                }
                return _Список_месяцев;
            }
        }
        private ObjectSet<Список_месяцев> _Список_месяцев;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<СписокНаМероприятие> СписокНаМероприятие
        {
            get
            {
                if ((_СписокНаМероприятие == null))
                {
                    _СписокНаМероприятие = base.CreateObjectSet<СписокНаМероприятие>("СписокНаМероприятие");
                }
                return _СписокНаМероприятие;
            }
        }
        private ObjectSet<СписокНаМероприятие> _СписокНаМероприятие;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ТБ_Домики> ТБ_Домики
        {
            get
            {
                if ((_ТБ_Домики == null))
                {
                    _ТБ_Домики = base.CreateObjectSet<ТБ_Домики>("ТБ_Домики");
                }
                return _ТБ_Домики;
            }
        }
        private ObjectSet<ТБ_Домики> _ТБ_Домики;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Цены> Цены
        {
            get
            {
                if ((_Цены == null))
                {
                    _Цены = base.CreateObjectSet<Цены>("Цены");
                }
                return _Цены;
            }
        }
        private ObjectSet<Цены> _Цены;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Administrators. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAdministrators(Administrators administrators)
        {
            base.AddObject("Administrators", administrators);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Cash. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCash(Cash cash)
        {
            base.AddObject("Cash", cash);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet CashCategory. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCashCategory(CashCategory cashCategory)
        {
            base.AddObject("CashCategory", cashCategory);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Notes. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToNotes(Notes notes)
        {
            base.AddObject("Notes", notes);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet NotesCategory. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToNotesCategory(NotesCategory notesCategory)
        {
            base.AddObject("NotesCategory", notesCategory);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Price. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPrice(Price price)
        {
            base.AddObject("Price", price);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PriceHistory. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPriceHistory(PriceHistory priceHistory)
        {
            base.AddObject("PriceHistory", priceHistory);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Visits. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToVisits(Visits visits)
        {
            base.AddObject("Visits", visits);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Выступления. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToВыступления(Выступления выступления)
        {
            base.AddObject("Выступления", выступления);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Имена_преподавателей. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToИмена_преподавателей(Имена_преподавателей имена_преподавателей)
        {
            base.AddObject("Имена_преподавателей", имена_преподавателей);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Календарь_занятий. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToКалендарь_занятий(Календарь_занятий календарь_занятий)
        {
            base.AddObject("Календарь_занятий", календарь_занятий);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Контактные_лица. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToКонтактные_лица(Контактные_лица контактные_лица)
        {
            base.AddObject("Контактные_лица", контактные_лица);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Контакты. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToКонтакты(Контакты контакты)
        {
            base.AddObject("Контакты", контакты);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Мероприятия. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToМероприятия(Мероприятия мероприятия)
        {
            base.AddObject("Мероприятия", мероприятия);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Название_SMS. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToНазвание_SMS(Название_SMS название_SMS)
        {
            base.AddObject("Название_SMS", название_SMS);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Название_мероприятий. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToНазвание_мероприятий(Название_мероприятий название_мероприятий)
        {
            base.AddObject("Название_мероприятий", название_мероприятий);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Название_месяцев. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToНазвание_месяцев(Название_месяцев название_месяцев)
        {
            base.AddObject("Название_месяцев", название_месяцев);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Название_напитков. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToНазвание_напитков(Название_напитков название_напитков)
        {
            base.AddObject("Название_напитков", название_напитков);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Название_района. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToНазвание_района(Название_района название_района)
        {
            base.AddObject("Название_района", название_района);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Название_школ. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToНазвание_школ(Название_школ название_школ)
        {
            base.AddObject("Название_школ", название_школ);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Названия_танцев. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToНазвания_танцев(Названия_танцев названия_танцев)
        {
            base.AddObject("Названия_танцев", названия_танцев);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Наличие_авто. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToНаличие_авто(Наличие_авто наличие_авто)
        {
            base.AddObject("Наличие_авто", наличие_авто);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Оплата. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToОплата(Оплата оплата)
        {
            base.AddObject("Оплата", оплата);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Организации. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToОрганизации(Организации организации)
        {
            base.AddObject("Организации", организации);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Списки_людей. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToСписки_людей(Списки_людей списки_людей)
        {
            base.AddObject("Списки_людей", списки_людей);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Список_дат. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToСписок_дат(Список_дат список_дат)
        {
            base.AddObject("Список_дат", список_дат);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Список_лет. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToСписок_лет(Список_лет список_лет)
        {
            base.AddObject("Список_лет", список_лет);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Список_месяцев. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToСписок_месяцев(Список_месяцев список_месяцев)
        {
            base.AddObject("Список_месяцев", список_месяцев);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet СписокНаМероприятие. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToСписокНаМероприятие(СписокНаМероприятие списокНаМероприятие)
        {
            base.AddObject("СписокНаМероприятие", списокНаМероприятие);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ТБ_Домики. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToТБ_Домики(ТБ_Домики тБ_Домики)
        {
            base.AddObject("ТБ_Домики", тБ_Домики);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Цены. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToЦены(Цены цены)
        {
            base.AddObject("Цены", цены);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Administrators")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Administrators : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Administrators.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="код_Ученика">Исходное значение свойства Код_Ученика.</param>
        /// <param name="название_танца">Исходное значение свойства Название_танца.</param>
        public static Administrators CreateAdministrators(global::System.Int32 id, global::System.Int32 код_Ученика, global::System.Int32 название_танца)
        {
            Administrators administrators = new Administrators();
            administrators.Id = id;
            administrators.Код_Ученика = код_Ученика;
            administrators.Название_танца = название_танца;
            return administrators;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код_Ученика
        {
            get
            {
                return _Код_Ученика;
            }
            set
            {
                OnКод_УченикаChanging(value);
                ReportPropertyChanging("Код_Ученика");
                _Код_Ученика = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Код_Ученика");
                OnКод_УченикаChanged();
            }
        }
        private global::System.Int32 _Код_Ученика;
        partial void OnКод_УченикаChanging(global::System.Int32 value);
        partial void OnКод_УченикаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Название_танца
        {
            get
            {
                return _Название_танца;
            }
            set
            {
                OnНазвание_танцаChanging(value);
                ReportPropertyChanging("Название_танца");
                _Название_танца = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Название_танца");
                OnНазвание_танцаChanged();
            }
        }
        private global::System.Int32 _Название_танца;
        partial void OnНазвание_танцаChanging(global::System.Int32 value);
        partial void OnНазвание_танцаChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Administrators_Названия_танцев", "Названия_танцев")]
        public Названия_танцев Названия_танцев
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_Administrators_Названия_танцев", "Названия_танцев").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_Administrators_Названия_танцев", "Названия_танцев").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Названия_танцев> Названия_танцевReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_Administrators_Названия_танцев", "Названия_танцев");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_Administrators_Названия_танцев", "Названия_танцев", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Administrators_Списки_людей", "Списки_людей")]
        public Списки_людей Списки_людей
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Administrators_Списки_людей", "Списки_людей").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Administrators_Списки_людей", "Списки_людей").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Списки_людей> Списки_людейReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Administrators_Списки_людей", "Списки_людей");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Administrators_Списки_людей", "Списки_людей", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Cash")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cash : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Cash.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="dataTimeCreate">Исходное значение свойства DataTimeCreate.</param>
        /// <param name="dataTimePay">Исходное значение свойства DataTimePay.</param>
        /// <param name="groupId">Исходное значение свойства GroupId.</param>
        /// <param name="peopleId">Исходное значение свойства PeopleId.</param>
        /// <param name="money">Исходное значение свойства Money.</param>
        /// <param name="loginRecId">Исходное значение свойства LoginRecId.</param>
        /// <param name="categoryId">Исходное значение свойства CategoryId.</param>
        /// <param name="payment_expenses">Исходное значение свойства Payment_expenses.</param>
        public static Cash CreateCash(global::System.Int32 id, global::System.DateTime dataTimeCreate, global::System.DateTime dataTimePay, global::System.Int32 groupId, global::System.Int32 peopleId, global::System.Int32 money, global::System.Int32 loginRecId, global::System.Int32 categoryId, global::System.Boolean payment_expenses)
        {
            Cash cash = new Cash();
            cash.Id = id;
            cash.DataTimeCreate = dataTimeCreate;
            cash.DataTimePay = dataTimePay;
            cash.GroupId = groupId;
            cash.PeopleId = peopleId;
            cash.Money = money;
            cash.LoginRecId = loginRecId;
            cash.CategoryId = categoryId;
            cash.Payment_expenses = payment_expenses;
            return cash;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DataTimeCreate
        {
            get
            {
                return _DataTimeCreate;
            }
            set
            {
                OnDataTimeCreateChanging(value);
                ReportPropertyChanging("DataTimeCreate");
                _DataTimeCreate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataTimeCreate");
                OnDataTimeCreateChanged();
            }
        }
        private global::System.DateTime _DataTimeCreate;
        partial void OnDataTimeCreateChanging(global::System.DateTime value);
        partial void OnDataTimeCreateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DataTimePay
        {
            get
            {
                return _DataTimePay;
            }
            set
            {
                OnDataTimePayChanging(value);
                ReportPropertyChanging("DataTimePay");
                _DataTimePay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataTimePay");
                OnDataTimePayChanged();
            }
        }
        private global::System.DateTime _DataTimePay;
        partial void OnDataTimePayChanging(global::System.DateTime value);
        partial void OnDataTimePayChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeopleId
        {
            get
            {
                return _PeopleId;
            }
            set
            {
                OnPeopleIdChanging(value);
                ReportPropertyChanging("PeopleId");
                _PeopleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeopleId");
                OnPeopleIdChanged();
            }
        }
        private global::System.Int32 _PeopleId;
        partial void OnPeopleIdChanging(global::System.Int32 value);
        partial void OnPeopleIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Money
        {
            get
            {
                return _Money;
            }
            set
            {
                OnMoneyChanging(value);
                ReportPropertyChanging("Money");
                _Money = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Money");
                OnMoneyChanged();
            }
        }
        private global::System.Int32 _Money;
        partial void OnMoneyChanging(global::System.Int32 value);
        partial void OnMoneyChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoginRecId
        {
            get
            {
                return _LoginRecId;
            }
            set
            {
                OnLoginRecIdChanging(value);
                ReportPropertyChanging("LoginRecId");
                _LoginRecId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoginRecId");
                OnLoginRecIdChanged();
            }
        }
        private global::System.Int32 _LoginRecId;
        partial void OnLoginRecIdChanging(global::System.Int32 value);
        partial void OnLoginRecIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Payment_expenses
        {
            get
            {
                return _Payment_expenses;
            }
            set
            {
                OnPayment_expensesChanging(value);
                ReportPropertyChanging("Payment_expenses");
                _Payment_expenses = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Payment_expenses");
                OnPayment_expensesChanged();
            }
        }
        private global::System.Boolean _Payment_expenses;
        partial void OnPayment_expensesChanging(global::System.Boolean value);
        partial void OnPayment_expensesChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Cash_CashCategory", "CashCategory")]
        public CashCategory CashCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CashCategory>("Cuatro_Caminos_BDModel.FK_Cash_CashCategory", "CashCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CashCategory>("Cuatro_Caminos_BDModel.FK_Cash_CashCategory", "CashCategory").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CashCategory> CashCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CashCategory>("Cuatro_Caminos_BDModel.FK_Cash_CashCategory", "CashCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CashCategory>("Cuatro_Caminos_BDModel.FK_Cash_CashCategory", "CashCategory", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Cash_Названия_танцев", "Названия_танцев")]
        public Названия_танцев Названия_танцев
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_Cash_Названия_танцев", "Названия_танцев").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_Cash_Названия_танцев", "Названия_танцев").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Названия_танцев> Названия_танцевReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_Cash_Названия_танцев", "Названия_танцев");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_Cash_Названия_танцев", "Названия_танцев", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Cash_Списки_людей", "Списки_людей")]
        public Списки_людей Списки_людей
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Cash_Списки_людей", "Списки_людей").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Cash_Списки_людей", "Списки_людей").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Списки_людей> Списки_людейReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Cash_Списки_людей", "Списки_людей");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Cash_Списки_людей", "Списки_людей", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="CashCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CashCategory : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта CashCategory.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static CashCategory CreateCashCategory(global::System.Int32 id, global::System.String name)
        {
            CashCategory cashCategory = new CashCategory();
            cashCategory.Id = id;
            cashCategory.Name = name;
            return cashCategory;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Cash_CashCategory", "Cash")]
        public EntityCollection<Cash> Cash
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cash>("Cuatro_Caminos_BDModel.FK_Cash_CashCategory", "Cash");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cash>("Cuatro_Caminos_BDModel.FK_Cash_CashCategory", "Cash", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_CashCategory_CashCategory", "CashCategory1")]
        public CashCategory CashCategory1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CashCategory>("Cuatro_Caminos_BDModel.FK_CashCategory_CashCategory", "CashCategory1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CashCategory>("Cuatro_Caminos_BDModel.FK_CashCategory_CashCategory", "CashCategory1").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CashCategory> CashCategory1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CashCategory>("Cuatro_Caminos_BDModel.FK_CashCategory_CashCategory", "CashCategory1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CashCategory>("Cuatro_Caminos_BDModel.FK_CashCategory_CashCategory", "CashCategory1", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_CashCategory_CashCategory", "CashCategory")]
        public CashCategory CashCategory2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CashCategory>("Cuatro_Caminos_BDModel.FK_CashCategory_CashCategory", "CashCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CashCategory>("Cuatro_Caminos_BDModel.FK_CashCategory_CashCategory", "CashCategory").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CashCategory> CashCategory2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CashCategory>("Cuatro_Caminos_BDModel.FK_CashCategory_CashCategory", "CashCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CashCategory>("Cuatro_Caminos_BDModel.FK_CashCategory_CashCategory", "CashCategory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Notes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Notes : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Notes.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="кодУченика">Исходное значение свойства КодУченика.</param>
        /// <param name="dataCreate">Исходное значение свойства DataCreate.</param>
        /// <param name="message">Исходное значение свойства Message.</param>
        /// <param name="idCategoryNotes">Исходное значение свойства IdCategoryNotes.</param>
        /// <param name="loginRecId">Исходное значение свойства LoginRecId.</param>
        public static Notes CreateNotes(global::System.Int32 id, global::System.Int32 кодУченика, global::System.DateTime dataCreate, global::System.String message, global::System.Int32 idCategoryNotes, global::System.Int32 loginRecId)
        {
            Notes notes = new Notes();
            notes.Id = id;
            notes.КодУченика = кодУченика;
            notes.DataCreate = dataCreate;
            notes.Message = message;
            notes.IdCategoryNotes = idCategoryNotes;
            notes.LoginRecId = loginRecId;
            return notes;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодУченика
        {
            get
            {
                return _КодУченика;
            }
            set
            {
                OnКодУченикаChanging(value);
                ReportPropertyChanging("КодУченика");
                _КодУченика = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодУченика");
                OnКодУченикаChanged();
            }
        }
        private global::System.Int32 _КодУченика;
        partial void OnКодУченикаChanging(global::System.Int32 value);
        partial void OnКодУченикаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DataCreate
        {
            get
            {
                return _DataCreate;
            }
            set
            {
                OnDataCreateChanging(value);
                ReportPropertyChanging("DataCreate");
                _DataCreate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataCreate");
                OnDataCreateChanged();
            }
        }
        private global::System.DateTime _DataCreate;
        partial void OnDataCreateChanging(global::System.DateTime value);
        partial void OnDataCreateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DatePlan
        {
            get
            {
                return _DatePlan;
            }
            set
            {
                OnDatePlanChanging(value);
                ReportPropertyChanging("DatePlan");
                _DatePlan = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DatePlan");
                OnDatePlanChanged();
            }
        }
        private Nullable<global::System.DateTime> _DatePlan;
        partial void OnDatePlanChanging(Nullable<global::System.DateTime> value);
        partial void OnDatePlanChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdCategoryNotes
        {
            get
            {
                return _IdCategoryNotes;
            }
            set
            {
                OnIdCategoryNotesChanging(value);
                ReportPropertyChanging("IdCategoryNotes");
                _IdCategoryNotes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdCategoryNotes");
                OnIdCategoryNotesChanged();
            }
        }
        private global::System.Int32 _IdCategoryNotes;
        partial void OnIdCategoryNotesChanging(global::System.Int32 value);
        partial void OnIdCategoryNotesChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoginRecId
        {
            get
            {
                return _LoginRecId;
            }
            set
            {
                OnLoginRecIdChanging(value);
                ReportPropertyChanging("LoginRecId");
                _LoginRecId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoginRecId");
                OnLoginRecIdChanged();
            }
        }
        private global::System.Int32 _LoginRecId;
        partial void OnLoginRecIdChanging(global::System.Int32 value);
        partial void OnLoginRecIdChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Notes_NotesCategory", "NotesCategory")]
        public NotesCategory NotesCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotesCategory>("Cuatro_Caminos_BDModel.FK_Notes_NotesCategory", "NotesCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotesCategory>("Cuatro_Caminos_BDModel.FK_Notes_NotesCategory", "NotesCategory").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NotesCategory> NotesCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotesCategory>("Cuatro_Caminos_BDModel.FK_Notes_NotesCategory", "NotesCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NotesCategory>("Cuatro_Caminos_BDModel.FK_Notes_NotesCategory", "NotesCategory", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Notes_Списки_людей", "Списки_людей")]
        public Списки_людей Списки_людей
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Notes_Списки_людей", "Списки_людей").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Notes_Списки_людей", "Списки_людей").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Списки_людей> Списки_людейReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Notes_Списки_людей", "Списки_людей");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Notes_Списки_людей", "Списки_людей", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="NotesCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NotesCategory : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта NotesCategory.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="category">Исходное значение свойства Category.</param>
        public static NotesCategory CreateNotesCategory(global::System.Int32 id, global::System.String category)
        {
            NotesCategory notesCategory = new NotesCategory();
            notesCategory.Id = id;
            notesCategory.Category = category;
            return notesCategory;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Notes_NotesCategory", "Notes")]
        public EntityCollection<Notes> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Notes>("Cuatro_Caminos_BDModel.FK_Notes_NotesCategory", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Notes>("Cuatro_Caminos_BDModel.FK_Notes_NotesCategory", "Notes", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_NotesCategory_NotesCategory1", "NotesCategory1")]
        public NotesCategory NotesCategory1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotesCategory>("Cuatro_Caminos_BDModel.FK_NotesCategory_NotesCategory1", "NotesCategory1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotesCategory>("Cuatro_Caminos_BDModel.FK_NotesCategory_NotesCategory1", "NotesCategory1").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NotesCategory> NotesCategory1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotesCategory>("Cuatro_Caminos_BDModel.FK_NotesCategory_NotesCategory1", "NotesCategory1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NotesCategory>("Cuatro_Caminos_BDModel.FK_NotesCategory_NotesCategory1", "NotesCategory1", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_NotesCategory_NotesCategory1", "NotesCategory")]
        public NotesCategory NotesCategory2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotesCategory>("Cuatro_Caminos_BDModel.FK_NotesCategory_NotesCategory1", "NotesCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotesCategory>("Cuatro_Caminos_BDModel.FK_NotesCategory_NotesCategory1", "NotesCategory").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NotesCategory> NotesCategory2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotesCategory>("Cuatro_Caminos_BDModel.FK_NotesCategory_NotesCategory1", "NotesCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NotesCategory>("Cuatro_Caminos_BDModel.FK_NotesCategory_NotesCategory1", "NotesCategory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Price")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Price : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Price.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="single">Исходное значение свойства Single.</param>
        /// <param name="subscription_8">Исходное значение свойства Subscription_8.</param>
        /// <param name="dateTimeRec">Исходное значение свойства DateTimeRec.</param>
        /// <param name="loginRec">Исходное значение свойства LoginRec.</param>
        public static Price CreatePrice(global::System.Int32 id, global::System.Int32 single, global::System.Int32 subscription_8, global::System.DateTime dateTimeRec, global::System.Int32 loginRec)
        {
            Price price = new Price();
            price.Id = id;
            price.Single = single;
            price.Subscription_8 = subscription_8;
            price.DateTimeRec = dateTimeRec;
            price.LoginRec = loginRec;
            return price;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Single
        {
            get
            {
                return _Single;
            }
            set
            {
                OnSingleChanging(value);
                ReportPropertyChanging("Single");
                _Single = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Single");
                OnSingleChanged();
            }
        }
        private global::System.Int32 _Single;
        partial void OnSingleChanging(global::System.Int32 value);
        partial void OnSingleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Subscription_8
        {
            get
            {
                return _Subscription_8;
            }
            set
            {
                OnSubscription_8Changing(value);
                ReportPropertyChanging("Subscription_8");
                _Subscription_8 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Subscription_8");
                OnSubscription_8Changed();
            }
        }
        private global::System.Int32 _Subscription_8;
        partial void OnSubscription_8Changing(global::System.Int32 value);
        partial void OnSubscription_8Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Subscription_4
        {
            get
            {
                return _Subscription_4;
            }
            set
            {
                OnSubscription_4Changing(value);
                ReportPropertyChanging("Subscription_4");
                _Subscription_4 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Subscription_4");
                OnSubscription_4Changed();
            }
        }
        private Nullable<global::System.Int32> _Subscription_4;
        partial void OnSubscription_4Changing(Nullable<global::System.Int32> value);
        partial void OnSubscription_4Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Subscription_16
        {
            get
            {
                return _Subscription_16;
            }
            set
            {
                OnSubscription_16Changing(value);
                ReportPropertyChanging("Subscription_16");
                _Subscription_16 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Subscription_16");
                OnSubscription_16Changed();
            }
        }
        private Nullable<global::System.Int32> _Subscription_16;
        partial void OnSubscription_16Changing(Nullable<global::System.Int32> value);
        partial void OnSubscription_16Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Subscription_36
        {
            get
            {
                return _Subscription_36;
            }
            set
            {
                OnSubscription_36Changing(value);
                ReportPropertyChanging("Subscription_36");
                _Subscription_36 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Subscription_36");
                OnSubscription_36Changed();
            }
        }
        private Nullable<global::System.Int32> _Subscription_36;
        partial void OnSubscription_36Changing(Nullable<global::System.Int32> value);
        partial void OnSubscription_36Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeRec
        {
            get
            {
                return _DateTimeRec;
            }
            set
            {
                OnDateTimeRecChanging(value);
                ReportPropertyChanging("DateTimeRec");
                _DateTimeRec = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeRec");
                OnDateTimeRecChanged();
            }
        }
        private global::System.DateTime _DateTimeRec;
        partial void OnDateTimeRecChanging(global::System.DateTime value);
        partial void OnDateTimeRecChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoginRec
        {
            get
            {
                return _LoginRec;
            }
            set
            {
                OnLoginRecChanging(value);
                ReportPropertyChanging("LoginRec");
                _LoginRec = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoginRec");
                OnLoginRecChanged();
            }
        }
        private global::System.Int32 _LoginRec;
        partial void OnLoginRecChanging(global::System.Int32 value);
        partial void OnLoginRecChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_PriceHistory_Price", "PriceHistory")]
        public EntityCollection<PriceHistory> PriceHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PriceHistory>("Cuatro_Caminos_BDModel.FK_PriceHistory_Price", "PriceHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PriceHistory>("Cuatro_Caminos_BDModel.FK_PriceHistory_Price", "PriceHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="PriceHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PriceHistory : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PriceHistory.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="date">Исходное значение свойства Date.</param>
        /// <param name="groupId">Исходное значение свойства GroupId.</param>
        /// <param name="priceId">Исходное значение свойства PriceId.</param>
        /// <param name="loginRec">Исходное значение свойства LoginRec.</param>
        /// <param name="dateTimeRec">Исходное значение свойства DateTimeRec.</param>
        public static PriceHistory CreatePriceHistory(global::System.Int32 id, global::System.DateTime date, global::System.Int32 groupId, global::System.Int32 priceId, global::System.Int32 loginRec, global::System.DateTime dateTimeRec)
        {
            PriceHistory priceHistory = new PriceHistory();
            priceHistory.Id = id;
            priceHistory.Date = date;
            priceHistory.GroupId = groupId;
            priceHistory.PriceId = priceId;
            priceHistory.LoginRec = loginRec;
            priceHistory.DateTimeRec = dateTimeRec;
            return priceHistory;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriceId
        {
            get
            {
                return _PriceId;
            }
            set
            {
                OnPriceIdChanging(value);
                ReportPropertyChanging("PriceId");
                _PriceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceId");
                OnPriceIdChanged();
            }
        }
        private global::System.Int32 _PriceId;
        partial void OnPriceIdChanging(global::System.Int32 value);
        partial void OnPriceIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoginRec
        {
            get
            {
                return _LoginRec;
            }
            set
            {
                OnLoginRecChanging(value);
                ReportPropertyChanging("LoginRec");
                _LoginRec = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoginRec");
                OnLoginRecChanged();
            }
        }
        private global::System.Int32 _LoginRec;
        partial void OnLoginRecChanging(global::System.Int32 value);
        partial void OnLoginRecChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeRec
        {
            get
            {
                return _DateTimeRec;
            }
            set
            {
                OnDateTimeRecChanging(value);
                ReportPropertyChanging("DateTimeRec");
                _DateTimeRec = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeRec");
                OnDateTimeRecChanged();
            }
        }
        private global::System.DateTime _DateTimeRec;
        partial void OnDateTimeRecChanging(global::System.DateTime value);
        partial void OnDateTimeRecChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_PriceHistory_Price", "Price")]
        public Price Price
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Price>("Cuatro_Caminos_BDModel.FK_PriceHistory_Price", "Price").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Price>("Cuatro_Caminos_BDModel.FK_PriceHistory_Price", "Price").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Price> PriceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Price>("Cuatro_Caminos_BDModel.FK_PriceHistory_Price", "Price");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Price>("Cuatro_Caminos_BDModel.FK_PriceHistory_Price", "Price", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_PriceHistory_Названия_танцев", "Названия_танцев")]
        public Названия_танцев Названия_танцев
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_PriceHistory_Названия_танцев", "Названия_танцев").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_PriceHistory_Названия_танцев", "Названия_танцев").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Названия_танцев> Названия_танцевReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_PriceHistory_Названия_танцев", "Названия_танцев");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_PriceHistory_Названия_танцев", "Названия_танцев", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Visits")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Visits : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Visits.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="dataTimeRec">Исходное значение свойства DataTimeRec.</param>
        /// <param name="dataTimePay">Исходное значение свойства DataTimePay.</param>
        /// <param name="peopleId">Исходное значение свойства PeopleId.</param>
        /// <param name="groupId">Исходное значение свойства GroupId.</param>
        /// <param name="value">Исходное значение свойства Value.</param>
        /// <param name="loginRecId">Исходное значение свойства LoginRecId.</param>
        public static Visits CreateVisits(global::System.Int32 id, global::System.DateTime dataTimeRec, global::System.DateTime dataTimePay, global::System.Int32 peopleId, global::System.Int32 groupId, global::System.Int32 value, global::System.Int32 loginRecId)
        {
            Visits visits = new Visits();
            visits.Id = id;
            visits.DataTimeRec = dataTimeRec;
            visits.DataTimePay = dataTimePay;
            visits.PeopleId = peopleId;
            visits.GroupId = groupId;
            visits.Value = value;
            visits.LoginRecId = loginRecId;
            return visits;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DataTimeRec
        {
            get
            {
                return _DataTimeRec;
            }
            set
            {
                OnDataTimeRecChanging(value);
                ReportPropertyChanging("DataTimeRec");
                _DataTimeRec = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataTimeRec");
                OnDataTimeRecChanged();
            }
        }
        private global::System.DateTime _DataTimeRec;
        partial void OnDataTimeRecChanging(global::System.DateTime value);
        partial void OnDataTimeRecChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DataTimePay
        {
            get
            {
                return _DataTimePay;
            }
            set
            {
                OnDataTimePayChanging(value);
                ReportPropertyChanging("DataTimePay");
                _DataTimePay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataTimePay");
                OnDataTimePayChanged();
            }
        }
        private global::System.DateTime _DataTimePay;
        partial void OnDataTimePayChanging(global::System.DateTime value);
        partial void OnDataTimePayChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeopleId
        {
            get
            {
                return _PeopleId;
            }
            set
            {
                OnPeopleIdChanging(value);
                ReportPropertyChanging("PeopleId");
                _PeopleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeopleId");
                OnPeopleIdChanged();
            }
        }
        private global::System.Int32 _PeopleId;
        partial void OnPeopleIdChanging(global::System.Int32 value);
        partial void OnPeopleIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Int32 _Value;
        partial void OnValueChanging(global::System.Int32 value);
        partial void OnValueChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoginRecId
        {
            get
            {
                return _LoginRecId;
            }
            set
            {
                OnLoginRecIdChanging(value);
                ReportPropertyChanging("LoginRecId");
                _LoginRecId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoginRecId");
                OnLoginRecIdChanged();
            }
        }
        private global::System.Int32 _LoginRecId;
        partial void OnLoginRecIdChanging(global::System.Int32 value);
        partial void OnLoginRecIdChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Visits_Названия_танцев", "Названия_танцев")]
        public Названия_танцев Названия_танцев
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_Visits_Названия_танцев", "Названия_танцев").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_Visits_Названия_танцев", "Названия_танцев").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Названия_танцев> Названия_танцевReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_Visits_Названия_танцев", "Названия_танцев");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_Visits_Названия_танцев", "Названия_танцев", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Visits_Списки_людей", "Списки_людей")]
        public Списки_людей Списки_людей
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Visits_Списки_людей", "Списки_людей").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Visits_Списки_людей", "Списки_людей").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Списки_людей> Списки_людейReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Visits_Списки_людей", "Списки_людей");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Visits_Списки_людей", "Списки_людей", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Выступления")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Выступления : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Выступления.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        /// <param name="дата">Исходное значение свойства Дата.</param>
        /// <param name="фИО">Исходное значение свойства ФИО.</param>
        /// <param name="название_мероприятия">Исходное значение свойства Название_мероприятия.</param>
        /// <param name="идет">Исходное значение свойства Идет.</param>
        public static Выступления CreateВыступления(global::System.Int32 код, global::System.DateTime дата, global::System.Int32 фИО, global::System.Int32 название_мероприятия, global::System.Boolean идет)
        {
            Выступления выступления = new Выступления();
            выступления.Код = код;
            выступления.Дата = дата;
            выступления.ФИО = фИО;
            выступления.Название_мероприятия = название_мероприятия;
            выступления.Идет = идет;
            return выступления;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Дата
        {
            get
            {
                return _Дата;
            }
            set
            {
                OnДатаChanging(value);
                ReportPropertyChanging("Дата");
                _Дата = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата");
                OnДатаChanged();
            }
        }
        private global::System.DateTime _Дата;
        partial void OnДатаChanging(global::System.DateTime value);
        partial void OnДатаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ФИО
        {
            get
            {
                return _ФИО;
            }
            set
            {
                OnФИОChanging(value);
                ReportPropertyChanging("ФИО");
                _ФИО = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ФИО");
                OnФИОChanged();
            }
        }
        private global::System.Int32 _ФИО;
        partial void OnФИОChanging(global::System.Int32 value);
        partial void OnФИОChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Название_мероприятия
        {
            get
            {
                return _Название_мероприятия;
            }
            set
            {
                OnНазвание_мероприятияChanging(value);
                ReportPropertyChanging("Название_мероприятия");
                _Название_мероприятия = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Название_мероприятия");
                OnНазвание_мероприятияChanged();
            }
        }
        private global::System.Int32 _Название_мероприятия;
        partial void OnНазвание_мероприятияChanging(global::System.Int32 value);
        partial void OnНазвание_мероприятияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Идет
        {
            get
            {
                return _Идет;
            }
            set
            {
                OnИдетChanging(value);
                ReportPropertyChanging("Идет");
                _Идет = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Идет");
                OnИдетChanged();
            }
        }
        private global::System.Boolean _Идет;
        partial void OnИдетChanging(global::System.Boolean value);
        partial void OnИдетChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Транспорт
        {
            get
            {
                return _Транспорт;
            }
            set
            {
                OnТранспортChanging(value);
                ReportPropertyChanging("Транспорт");
                _Транспорт = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Транспорт");
                OnТранспортChanged();
            }
        }
        private Nullable<global::System.Int32> _Транспорт;
        partial void OnТранспортChanging(Nullable<global::System.Int32> value);
        partial void OnТранспортChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Примечание
        {
            get
            {
                return _Примечание;
            }
            set
            {
                OnПримечаниеChanging(value);
                ReportPropertyChanging("Примечание");
                _Примечание = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Примечание");
                OnПримечаниеChanged();
            }
        }
        private global::System.String _Примечание;
        partial void OnПримечаниеChanging(global::System.String value);
        partial void OnПримечаниеChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Имена_преподавателей")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Имена_преподавателей : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Имена_преподавателей.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        public static Имена_преподавателей CreateИмена_преподавателей(global::System.Int32 код)
        {
            Имена_преподавателей имена_преподавателей = new Имена_преподавателей();
            имена_преподавателей.Код = код;
            return имена_преподавателей;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ФИО
        {
            get
            {
                return _ФИО;
            }
            set
            {
                OnФИОChanging(value);
                ReportPropertyChanging("ФИО");
                _ФИО = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ФИО");
                OnФИОChanged();
            }
        }
        private global::System.String _ФИО;
        partial void OnФИОChanging(global::System.String value);
        partial void OnФИОChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Visible
        {
            get
            {
                return _Visible;
            }
            set
            {
                OnVisibleChanging(value);
                ReportPropertyChanging("Visible");
                _Visible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Visible");
                OnVisibleChanged();
            }
        }
        private Nullable<global::System.Boolean> _Visible;
        partial void OnVisibleChanging(Nullable<global::System.Boolean> value);
        partial void OnVisibleChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Имена_Преподавателей", "Оплата")]
        public EntityCollection<Оплата> Оплата
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Оплата>("Cuatro_Caminos_BDModel.FK_Имена_Преподавателей", "Оплата");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Оплата>("Cuatro_Caminos_BDModel.FK_Имена_Преподавателей", "Оплата", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Календарь_занятий")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Календарь_занятий : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Календарь_занятий.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        /// <param name="groupId">Исходное значение свойства GroupId.</param>
        /// <param name="date">Исходное значение свойства Date.</param>
        /// <param name="dayOfWeek">Исходное значение свойства DayOfWeek.</param>
        /// <param name="dataRec">Исходное значение свойства DataRec.</param>
        /// <param name="loginRec">Исходное значение свойства LoginRec.</param>
        /// <param name="upsize_ts">Исходное значение свойства upsize_ts.</param>
        public static Календарь_занятий CreateКалендарь_занятий(global::System.Int32 код, global::System.Int32 groupId, global::System.DateTime date, global::System.String dayOfWeek, global::System.DateTime dataRec, global::System.Int32 loginRec, global::System.Byte[] upsize_ts)
        {
            Календарь_занятий календарь_занятий = new Календарь_занятий();
            календарь_занятий.Код = код;
            календарь_занятий.GroupId = groupId;
            календарь_занятий.Date = date;
            календарь_занятий.DayOfWeek = dayOfWeek;
            календарь_занятий.DataRec = dataRec;
            календарь_занятий.LoginRec = loginRec;
            календарь_занятий.upsize_ts = upsize_ts;
            return календарь_занятий;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DayOfWeek
        {
            get
            {
                return _DayOfWeek;
            }
            set
            {
                OnDayOfWeekChanging(value);
                ReportPropertyChanging("DayOfWeek");
                _DayOfWeek = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DayOfWeek");
                OnDayOfWeekChanged();
            }
        }
        private global::System.String _DayOfWeek;
        partial void OnDayOfWeekChanging(global::System.String value);
        partial void OnDayOfWeekChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DataRec
        {
            get
            {
                return _DataRec;
            }
            set
            {
                OnDataRecChanging(value);
                ReportPropertyChanging("DataRec");
                _DataRec = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataRec");
                OnDataRecChanged();
            }
        }
        private global::System.DateTime _DataRec;
        partial void OnDataRecChanging(global::System.DateTime value);
        partial void OnDataRecChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoginRec
        {
            get
            {
                return _LoginRec;
            }
            set
            {
                OnLoginRecChanging(value);
                ReportPropertyChanging("LoginRec");
                _LoginRec = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoginRec");
                OnLoginRecChanged();
            }
        }
        private global::System.Int32 _LoginRec;
        partial void OnLoginRecChanging(global::System.Int32 value);
        partial void OnLoginRecChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] upsize_ts
        {
            get
            {
                return StructuralObject.GetValidValue(_upsize_ts);
            }
            set
            {
                Onupsize_tsChanging(value);
                ReportPropertyChanging("upsize_ts");
                _upsize_ts = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("upsize_ts");
                Onupsize_tsChanged();
            }
        }
        private global::System.Byte[] _upsize_ts;
        partial void Onupsize_tsChanging(global::System.Byte[] value);
        partial void Onupsize_tsChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Календарь_занятий_Названия_танцев", "Названия_танцев")]
        public Названия_танцев Названия_танцев
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_Календарь_занятий_Названия_танцев", "Названия_танцев").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_Календарь_занятий_Названия_танцев", "Названия_танцев").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Названия_танцев> Названия_танцевReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_Календарь_занятий_Названия_танцев", "Названия_танцев");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_Календарь_занятий_Названия_танцев", "Названия_танцев", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Контактные_лица")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Контактные_лица : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Контактные_лица.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        public static Контактные_лица CreateКонтактные_лица(global::System.Int32 код)
        {
            Контактные_лица контактные_лица = new Контактные_лица();
            контактные_лица.Код = код;
            return контактные_лица;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Название_организации
        {
            get
            {
                return _Название_организации;
            }
            set
            {
                OnНазвание_организацииChanging(value);
                ReportPropertyChanging("Название_организации");
                _Название_организации = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Название_организации");
                OnНазвание_организацииChanged();
            }
        }
        private Nullable<global::System.Int32> _Название_организации;
        partial void OnНазвание_организацииChanging(Nullable<global::System.Int32> value);
        partial void OnНазвание_организацииChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ФИО
        {
            get
            {
                return _ФИО;
            }
            set
            {
                OnФИОChanging(value);
                ReportPropertyChanging("ФИО");
                _ФИО = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ФИО");
                OnФИОChanged();
            }
        }
        private global::System.String _ФИО;
        partial void OnФИОChanging(global::System.String value);
        partial void OnФИОChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Телефон
        {
            get
            {
                return _Телефон;
            }
            set
            {
                OnТелефонChanging(value);
                ReportPropertyChanging("Телефон");
                _Телефон = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Телефон");
                OnТелефонChanged();
            }
        }
        private global::System.String _Телефон;
        partial void OnТелефонChanging(global::System.String value);
        partial void OnТелефонChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "Контактные_лица_FK00", "Организации")]
        public Организации Организации
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Организации>("Cuatro_Caminos_BDModel.Контактные_лица_FK00", "Организации").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Организации>("Cuatro_Caminos_BDModel.Контактные_лица_FK00", "Организации").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Организации> ОрганизацииReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Организации>("Cuatro_Caminos_BDModel.Контактные_лица_FK00", "Организации");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Организации>("Cuatro_Caminos_BDModel.Контактные_лица_FK00", "Организации", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Контакты")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Контакты : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Контакты.
        /// </summary>
        /// <param name="иД">Исходное значение свойства ИД.</param>
        public static Контакты CreateКонтакты(global::System.Int32 иД)
        {
            Контакты контакты = new Контакты();
            контакты.ИД = иД;
            return контакты;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ИД
        {
            get
            {
                return _ИД;
            }
            set
            {
                if (_ИД != value)
                {
                    OnИДChanging(value);
                    ReportPropertyChanging("ИД");
                    _ИД = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ИД");
                    OnИДChanged();
                }
            }
        }
        private global::System.Int32 _ИД;
        partial void OnИДChanging(global::System.Int32 value);
        partial void OnИДChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Организация
        {
            get
            {
                return _Организация;
            }
            set
            {
                OnОрганизацияChanging(value);
                ReportPropertyChanging("Организация");
                _Организация = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Организация");
                OnОрганизацияChanged();
            }
        }
        private global::System.String _Организация;
        partial void OnОрганизацияChanging(global::System.String value);
        partial void OnОрганизацияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Фамилия
        {
            get
            {
                return _Фамилия;
            }
            set
            {
                OnФамилияChanging(value);
                ReportPropertyChanging("Фамилия");
                _Фамилия = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Фамилия");
                OnФамилияChanged();
            }
        }
        private global::System.String _Фамилия;
        partial void OnФамилияChanging(global::System.String value);
        partial void OnФамилияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Имя
        {
            get
            {
                return _Имя;
            }
            set
            {
                OnИмяChanging(value);
                ReportPropertyChanging("Имя");
                _Имя = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Имя");
                OnИмяChanged();
            }
        }
        private global::System.String _Имя;
        partial void OnИмяChanging(global::System.String value);
        partial void OnИмяChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Адрес_электронной_почты
        {
            get
            {
                return _Адрес_электронной_почты;
            }
            set
            {
                OnАдрес_электронной_почтыChanging(value);
                ReportPropertyChanging("Адрес_электронной_почты");
                _Адрес_электронной_почты = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Адрес_электронной_почты");
                OnАдрес_электронной_почтыChanged();
            }
        }
        private global::System.String _Адрес_электронной_почты;
        partial void OnАдрес_электронной_почтыChanging(global::System.String value);
        partial void OnАдрес_электронной_почтыChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Должность
        {
            get
            {
                return _Должность;
            }
            set
            {
                OnДолжностьChanging(value);
                ReportPropertyChanging("Должность");
                _Должность = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Должность");
                OnДолжностьChanged();
            }
        }
        private global::System.String _Должность;
        partial void OnДолжностьChanging(global::System.String value);
        partial void OnДолжностьChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Рабочий_телефон
        {
            get
            {
                return _Рабочий_телефон;
            }
            set
            {
                OnРабочий_телефонChanging(value);
                ReportPropertyChanging("Рабочий_телефон");
                _Рабочий_телефон = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Рабочий_телефон");
                OnРабочий_телефонChanged();
            }
        }
        private global::System.String _Рабочий_телефон;
        partial void OnРабочий_телефонChanging(global::System.String value);
        partial void OnРабочий_телефонChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Домашний_телефон
        {
            get
            {
                return _Домашний_телефон;
            }
            set
            {
                OnДомашний_телефонChanging(value);
                ReportPropertyChanging("Домашний_телефон");
                _Домашний_телефон = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Домашний_телефон");
                OnДомашний_телефонChanged();
            }
        }
        private global::System.String _Домашний_телефон;
        partial void OnДомашний_телефонChanging(global::System.String value);
        partial void OnДомашний_телефонChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Мобильный_телефон
        {
            get
            {
                return _Мобильный_телефон;
            }
            set
            {
                OnМобильный_телефонChanging(value);
                ReportPropertyChanging("Мобильный_телефон");
                _Мобильный_телефон = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Мобильный_телефон");
                OnМобильный_телефонChanged();
            }
        }
        private global::System.String _Мобильный_телефон;
        partial void OnМобильный_телефонChanging(global::System.String value);
        partial void OnМобильный_телефонChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Номер_факса
        {
            get
            {
                return _Номер_факса;
            }
            set
            {
                OnНомер_факсаChanging(value);
                ReportPropertyChanging("Номер_факса");
                _Номер_факса = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Номер_факса");
                OnНомер_факсаChanged();
            }
        }
        private global::System.String _Номер_факса;
        partial void OnНомер_факсаChanging(global::System.String value);
        partial void OnНомер_факсаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Адрес
        {
            get
            {
                return _Адрес;
            }
            set
            {
                OnАдресChanging(value);
                ReportPropertyChanging("Адрес");
                _Адрес = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Адрес");
                OnАдресChanged();
            }
        }
        private global::System.String _Адрес;
        partial void OnАдресChanging(global::System.String value);
        partial void OnАдресChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Город
        {
            get
            {
                return _Город;
            }
            set
            {
                OnГородChanging(value);
                ReportPropertyChanging("Город");
                _Город = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Город");
                OnГородChanged();
            }
        }
        private global::System.String _Город;
        partial void OnГородChanging(global::System.String value);
        partial void OnГородChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Область__край
        {
            get
            {
                return _Область__край;
            }
            set
            {
                OnОбласть__крайChanging(value);
                ReportPropertyChanging("Область__край");
                _Область__край = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Область__край");
                OnОбласть__крайChanged();
            }
        }
        private global::System.String _Область__край;
        partial void OnОбласть__крайChanging(global::System.String value);
        partial void OnОбласть__крайChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Индекс
        {
            get
            {
                return _Индекс;
            }
            set
            {
                OnИндексChanging(value);
                ReportPropertyChanging("Индекс");
                _Индекс = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Индекс");
                OnИндексChanged();
            }
        }
        private global::System.String _Индекс;
        partial void OnИндексChanging(global::System.String value);
        partial void OnИндексChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Страна_или_регион
        {
            get
            {
                return _Страна_или_регион;
            }
            set
            {
                OnСтрана_или_регионChanging(value);
                ReportPropertyChanging("Страна_или_регион");
                _Страна_или_регион = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Страна_или_регион");
                OnСтрана_или_регионChanged();
            }
        }
        private global::System.String _Страна_или_регион;
        partial void OnСтрана_или_регионChanging(global::System.String value);
        partial void OnСтрана_или_регионChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Веб_страница
        {
            get
            {
                return _Веб_страница;
            }
            set
            {
                OnВеб_страницаChanging(value);
                ReportPropertyChanging("Веб_страница");
                _Веб_страница = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Веб_страница");
                OnВеб_страницаChanged();
            }
        }
        private global::System.String _Веб_страница;
        partial void OnВеб_страницаChanging(global::System.String value);
        partial void OnВеб_страницаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Заметки
        {
            get
            {
                return _Заметки;
            }
            set
            {
                OnЗаметкиChanging(value);
                ReportPropertyChanging("Заметки");
                _Заметки = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Заметки");
                OnЗаметкиChanged();
            }
        }
        private global::System.String _Заметки;
        partial void OnЗаметкиChanging(global::System.String value);
        partial void OnЗаметкиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Вложения
        {
            get
            {
                return _Вложения;
            }
            set
            {
                OnВложенияChanging(value);
                ReportPropertyChanging("Вложения");
                _Вложения = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Вложения");
                OnВложенияChanged();
            }
        }
        private global::System.String _Вложения;
        partial void OnВложенияChanging(global::System.String value);
        partial void OnВложенияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] upsize_ts
        {
            get
            {
                return StructuralObject.GetValidValue(_upsize_ts);
            }
            set
            {
                Onupsize_tsChanging(value);
                ReportPropertyChanging("upsize_ts");
                _upsize_ts = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("upsize_ts");
                Onupsize_tsChanged();
            }
        }
        private global::System.Byte[] _upsize_ts;
        partial void Onupsize_tsChanging(global::System.Byte[] value);
        partial void Onupsize_tsChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Мероприятия")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Мероприятия : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Мероприятия.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        /// <param name="дата">Исходное значение свойства Дата.</param>
        /// <param name="фИО">Исходное значение свойства ФИО.</param>
        /// <param name="название_мероприятия">Исходное значение свойства Название_мероприятия.</param>
        /// <param name="идет">Исходное значение свойства Идет.</param>
        public static Мероприятия CreateМероприятия(global::System.Int32 код, global::System.DateTime дата, global::System.Int32 фИО, global::System.Int32 название_мероприятия, global::System.Boolean идет)
        {
            Мероприятия мероприятия = new Мероприятия();
            мероприятия.Код = код;
            мероприятия.Дата = дата;
            мероприятия.ФИО = фИО;
            мероприятия.Название_мероприятия = название_мероприятия;
            мероприятия.Идет = идет;
            return мероприятия;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Дата
        {
            get
            {
                return _Дата;
            }
            set
            {
                OnДатаChanging(value);
                ReportPropertyChanging("Дата");
                _Дата = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата");
                OnДатаChanged();
            }
        }
        private global::System.DateTime _Дата;
        partial void OnДатаChanging(global::System.DateTime value);
        partial void OnДатаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ФИО
        {
            get
            {
                return _ФИО;
            }
            set
            {
                OnФИОChanging(value);
                ReportPropertyChanging("ФИО");
                _ФИО = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ФИО");
                OnФИОChanged();
            }
        }
        private global::System.Int32 _ФИО;
        partial void OnФИОChanging(global::System.Int32 value);
        partial void OnФИОChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Название_мероприятия
        {
            get
            {
                return _Название_мероприятия;
            }
            set
            {
                OnНазвание_мероприятияChanging(value);
                ReportPropertyChanging("Название_мероприятия");
                _Название_мероприятия = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Название_мероприятия");
                OnНазвание_мероприятияChanged();
            }
        }
        private global::System.Int32 _Название_мероприятия;
        partial void OnНазвание_мероприятияChanging(global::System.Int32 value);
        partial void OnНазвание_мероприятияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Проживание
        {
            get
            {
                return _Проживание;
            }
            set
            {
                OnПроживаниеChanging(value);
                ReportPropertyChanging("Проживание");
                _Проживание = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Проживание");
                OnПроживаниеChanged();
            }
        }
        private Nullable<global::System.Decimal> _Проживание;
        partial void OnПроживаниеChanging(Nullable<global::System.Decimal> value);
        partial void OnПроживаниеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Питание
        {
            get
            {
                return _Питание;
            }
            set
            {
                OnПитаниеChanging(value);
                ReportPropertyChanging("Питание");
                _Питание = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Питание");
                OnПитаниеChanged();
            }
        }
        private Nullable<global::System.Decimal> _Питание;
        partial void OnПитаниеChanging(Nullable<global::System.Decimal> value);
        partial void OnПитаниеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Оплатил
        {
            get
            {
                return _Оплатил;
            }
            set
            {
                OnОплатилChanging(value);
                ReportPropertyChanging("Оплатил");
                _Оплатил = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Оплатил");
                OnОплатилChanged();
            }
        }
        private Nullable<global::System.Decimal> _Оплатил;
        partial void OnОплатилChanging(Nullable<global::System.Decimal> value);
        partial void OnОплатилChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Остаток
        {
            get
            {
                return _Остаток;
            }
            set
            {
                OnОстатокChanging(value);
                ReportPropertyChanging("Остаток");
                _Остаток = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Остаток");
                OnОстатокChanged();
            }
        }
        private Nullable<global::System.Decimal> _Остаток;
        partial void OnОстатокChanging(Nullable<global::System.Decimal> value);
        partial void OnОстатокChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Идет
        {
            get
            {
                return _Идет;
            }
            set
            {
                OnИдетChanging(value);
                ReportPropertyChanging("Идет");
                _Идет = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Идет");
                OnИдетChanged();
            }
        }
        private global::System.Boolean _Идет;
        partial void OnИдетChanging(global::System.Boolean value);
        partial void OnИдетChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Транспорт
        {
            get
            {
                return _Транспорт;
            }
            set
            {
                OnТранспортChanging(value);
                ReportPropertyChanging("Транспорт");
                _Транспорт = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Транспорт");
                OnТранспортChanged();
            }
        }
        private Nullable<global::System.Int32> _Транспорт;
        partial void OnТранспортChanging(Nullable<global::System.Int32> value);
        partial void OnТранспортChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Примечание
        {
            get
            {
                return _Примечание;
            }
            set
            {
                OnПримечаниеChanging(value);
                ReportPropertyChanging("Примечание");
                _Примечание = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Примечание");
                OnПримечаниеChanged();
            }
        }
        private global::System.String _Примечание;
        partial void OnПримечаниеChanging(global::System.String value);
        partial void OnПримечаниеChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "Мероприятия_FK01", "Наличие_авто")]
        public Наличие_авто Наличие_авто
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Наличие_авто>("Cuatro_Caminos_BDModel.Мероприятия_FK01", "Наличие_авто").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Наличие_авто>("Cuatro_Caminos_BDModel.Мероприятия_FK01", "Наличие_авто").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Наличие_авто> Наличие_автоReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Наличие_авто>("Cuatro_Caminos_BDModel.Мероприятия_FK01", "Наличие_авто");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Наличие_авто>("Cuatro_Caminos_BDModel.Мероприятия_FK01", "Наличие_авто", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Название_SMS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Название_SMS : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Название_SMS.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        public static Название_SMS CreateНазвание_SMS(global::System.Int32 код)
        {
            Название_SMS название_SMS = new Название_SMS();
            название_SMS.Код = код;
            return название_SMS;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SMS
        {
            get
            {
                return _SMS;
            }
            set
            {
                OnSMSChanging(value);
                ReportPropertyChanging("SMS");
                _SMS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SMS");
                OnSMSChanged();
            }
        }
        private global::System.String _SMS;
        partial void OnSMSChanging(global::System.String value);
        partial void OnSMSChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Sms", "Списки_людей")]
        public EntityCollection<Списки_людей> Списки_людей
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Списки_людей>("Cuatro_Caminos_BDModel.FK_Sms", "Списки_людей");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Списки_людей>("Cuatro_Caminos_BDModel.FK_Sms", "Списки_людей", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Название_мероприятий")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Название_мероприятий : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Название_мероприятий.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        /// <param name="date">Исходное значение свойства Date.</param>
        /// <param name="мероприятие">Исходное значение свойства Мероприятие.</param>
        /// <param name="dataRec">Исходное значение свойства DataRec.</param>
        /// <param name="liginRecId">Исходное значение свойства LiginRecId.</param>
        /// <param name="close">Исходное значение свойства Close.</param>
        public static Название_мероприятий CreateНазвание_мероприятий(global::System.Int32 код, global::System.DateTime date, global::System.String мероприятие, global::System.DateTime dataRec, global::System.Int32 liginRecId, global::System.Boolean close)
        {
            Название_мероприятий название_мероприятий = new Название_мероприятий();
            название_мероприятий.Код = код;
            название_мероприятий.Date = date;
            название_мероприятий.Мероприятие = мероприятие;
            название_мероприятий.DataRec = dataRec;
            название_мероприятий.LiginRecId = liginRecId;
            название_мероприятий.Close = close;
            return название_мероприятий;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Мероприятие
        {
            get
            {
                return _Мероприятие;
            }
            set
            {
                OnМероприятиеChanging(value);
                ReportPropertyChanging("Мероприятие");
                _Мероприятие = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Мероприятие");
                OnМероприятиеChanged();
            }
        }
        private global::System.String _Мероприятие;
        partial void OnМероприятиеChanging(global::System.String value);
        partial void OnМероприятиеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Примечание
        {
            get
            {
                return _Примечание;
            }
            set
            {
                OnПримечаниеChanging(value);
                ReportPropertyChanging("Примечание");
                _Примечание = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Примечание");
                OnПримечаниеChanged();
            }
        }
        private global::System.String _Примечание;
        partial void OnПримечаниеChanging(global::System.String value);
        partial void OnПримечаниеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DataRec
        {
            get
            {
                return _DataRec;
            }
            set
            {
                OnDataRecChanging(value);
                ReportPropertyChanging("DataRec");
                _DataRec = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataRec");
                OnDataRecChanged();
            }
        }
        private global::System.DateTime _DataRec;
        partial void OnDataRecChanging(global::System.DateTime value);
        partial void OnDataRecChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LiginRecId
        {
            get
            {
                return _LiginRecId;
            }
            set
            {
                OnLiginRecIdChanging(value);
                ReportPropertyChanging("LiginRecId");
                _LiginRecId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LiginRecId");
                OnLiginRecIdChanged();
            }
        }
        private global::System.Int32 _LiginRecId;
        partial void OnLiginRecIdChanging(global::System.Int32 value);
        partial void OnLiginRecIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Close
        {
            get
            {
                return _Close;
            }
            set
            {
                OnCloseChanging(value);
                ReportPropertyChanging("Close");
                _Close = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Close");
                OnCloseChanged();
            }
        }
        private global::System.Boolean _Close;
        partial void OnCloseChanging(global::System.Boolean value);
        partial void OnCloseChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_СписокНаМероприятие_Название_мероприятий", "СписокНаМероприятие")]
        public EntityCollection<СписокНаМероприятие> СписокНаМероприятие
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<СписокНаМероприятие>("Cuatro_Caminos_BDModel.FK_СписокНаМероприятие_Название_мероприятий", "СписокНаМероприятие");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<СписокНаМероприятие>("Cuatro_Caminos_BDModel.FK_СписокНаМероприятие_Название_мероприятий", "СписокНаМероприятие", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Название_месяцев")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Название_месяцев : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Название_месяцев.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        public static Название_месяцев CreateНазвание_месяцев(global::System.Int32 код)
        {
            Название_месяцев название_месяцев = new Название_месяцев();
            название_месяцев.Код = код;
            return название_месяцев;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Месяц
        {
            get
            {
                return _Месяц;
            }
            set
            {
                OnМесяцChanging(value);
                ReportPropertyChanging("Месяц");
                _Месяц = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Месяц");
                OnМесяцChanged();
            }
        }
        private global::System.String _Месяц;
        partial void OnМесяцChanging(global::System.String value);
        partial void OnМесяцChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Название_месяцев", "Оплата")]
        public EntityCollection<Оплата> Оплата
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Оплата>("Cuatro_Caminos_BDModel.FK_Название_месяцев", "Оплата");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Оплата>("Cuatro_Caminos_BDModel.FK_Название_месяцев", "Оплата", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Название_напитков")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Название_напитков : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Название_напитков.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        public static Название_напитков CreateНазвание_напитков(global::System.Int32 код)
        {
            Название_напитков название_напитков = new Название_напитков();
            название_напитков.Код = код;
            return название_напитков;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Название_напитков1
        {
            get
            {
                return _Название_напитков1;
            }
            set
            {
                OnНазвание_напитков1Changing(value);
                ReportPropertyChanging("Название_напитков1");
                _Название_напитков1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Название_напитков1");
                OnНазвание_напитков1Changed();
            }
        }
        private global::System.String _Название_напитков1;
        partial void OnНазвание_напитков1Changing(global::System.String value);
        partial void OnНазвание_напитков1Changed();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Название_района")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Название_района : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Название_района.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        public static Название_района CreateНазвание_района(global::System.Int32 код)
        {
            Название_района название_района = new Название_района();
            название_района.Код = код;
            return название_района;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Название_района1
        {
            get
            {
                return _Название_района1;
            }
            set
            {
                OnНазвание_района1Changing(value);
                ReportPropertyChanging("Название_района1");
                _Название_района1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Название_района1");
                OnНазвание_района1Changed();
            }
        }
        private global::System.String _Название_района1;
        partial void OnНазвание_района1Changing(global::System.String value);
        partial void OnНазвание_района1Changed();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK03_Районы", "Списки_людей")]
        public EntityCollection<Списки_людей> Списки_людей
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Списки_людей>("Cuatro_Caminos_BDModel.FK03_Районы", "Списки_людей");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Списки_людей>("Cuatro_Caminos_BDModel.FK03_Районы", "Списки_людей", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Название_школ")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Название_школ : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Название_школ.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        /// <param name="visible">Исходное значение свойства Visible.</param>
        public static Название_школ CreateНазвание_школ(global::System.Int32 код, global::System.Boolean visible)
        {
            Название_школ название_школ = new Название_школ();
            название_школ.Код = код;
            название_школ.Visible = visible;
            return название_школ;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Школы
        {
            get
            {
                return _Школы;
            }
            set
            {
                OnШколыChanging(value);
                ReportPropertyChanging("Школы");
                _Школы = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Школы");
                OnШколыChanged();
            }
        }
        private global::System.String _Школы;
        partial void OnШколыChanging(global::System.String value);
        partial void OnШколыChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Visible
        {
            get
            {
                return _Visible;
            }
            set
            {
                OnVisibleChanging(value);
                ReportPropertyChanging("Visible");
                _Visible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Visible");
                OnVisibleChanged();
            }
        }
        private global::System.Boolean _Visible;
        partial void OnVisibleChanging(global::System.Boolean value);
        partial void OnVisibleChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK04_Школы", "Списки_людей")]
        public EntityCollection<Списки_людей> Списки_людей
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Списки_людей>("Cuatro_Caminos_BDModel.FK04_Школы", "Списки_людей");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Списки_людей>("Cuatro_Caminos_BDModel.FK04_Школы", "Списки_людей", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Названия_танцев")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Названия_танцев : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Названия_танцев.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        /// <param name="название_танца">Исходное значение свойства Название_танца.</param>
        public static Названия_танцев CreateНазвания_танцев(global::System.Int32 код, global::System.String название_танца)
        {
            Названия_танцев названия_танцев = new Названия_танцев();
            названия_танцев.Код = код;
            названия_танцев.Название_танца = название_танца;
            return названия_танцев;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Название_танца
        {
            get
            {
                return _Название_танца;
            }
            set
            {
                OnНазвание_танцаChanging(value);
                ReportPropertyChanging("Название_танца");
                _Название_танца = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Название_танца");
                OnНазвание_танцаChanged();
            }
        }
        private global::System.String _Название_танца;
        partial void OnНазвание_танцаChanging(global::System.String value);
        partial void OnНазвание_танцаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateTimeRec
        {
            get
            {
                return _DateTimeRec;
            }
            set
            {
                OnDateTimeRecChanging(value);
                ReportPropertyChanging("DateTimeRec");
                _DateTimeRec = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeRec");
                OnDateTimeRecChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateTimeRec;
        partial void OnDateTimeRecChanging(Nullable<global::System.DateTime> value);
        partial void OnDateTimeRecChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LoginRec
        {
            get
            {
                return _LoginRec;
            }
            set
            {
                OnLoginRecChanging(value);
                ReportPropertyChanging("LoginRec");
                _LoginRec = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoginRec");
                OnLoginRecChanged();
            }
        }
        private Nullable<global::System.Int32> _LoginRec;
        partial void OnLoginRecChanging(Nullable<global::System.Int32> value);
        partial void OnLoginRecChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Administrators_Названия_танцев", "Administrators")]
        public EntityCollection<Administrators> Administrators
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Administrators>("Cuatro_Caminos_BDModel.FK_Administrators_Названия_танцев", "Administrators");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Administrators>("Cuatro_Caminos_BDModel.FK_Administrators_Названия_танцев", "Administrators", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Cash_Названия_танцев", "Cash")]
        public EntityCollection<Cash> Cash
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cash>("Cuatro_Caminos_BDModel.FK_Cash_Названия_танцев", "Cash");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cash>("Cuatro_Caminos_BDModel.FK_Cash_Названия_танцев", "Cash", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_PriceHistory_Названия_танцев", "PriceHistory")]
        public EntityCollection<PriceHistory> PriceHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PriceHistory>("Cuatro_Caminos_BDModel.FK_PriceHistory_Названия_танцев", "PriceHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PriceHistory>("Cuatro_Caminos_BDModel.FK_PriceHistory_Названия_танцев", "PriceHistory", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Visits_Названия_танцев", "Visits")]
        public EntityCollection<Visits> Visits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Visits>("Cuatro_Caminos_BDModel.FK_Visits_Названия_танцев", "Visits");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Visits>("Cuatro_Caminos_BDModel.FK_Visits_Названия_танцев", "Visits", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Календарь_занятий_Названия_танцев", "Календарь_занятий")]
        public EntityCollection<Календарь_занятий> Календарь_занятий
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Календарь_занятий>("Cuatro_Caminos_BDModel.FK_Календарь_занятий_Названия_танцев", "Календарь_занятий");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Календарь_занятий>("Cuatro_Caminos_BDModel.FK_Календарь_занятий_Названия_танцев", "Календарь_занятий", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Название_танцев_Оплата", "Оплата")]
        public EntityCollection<Оплата> Оплата
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Оплата>("Cuatro_Caminos_BDModel.FK_Название_танцев_Оплата", "Оплата");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Оплата>("Cuatro_Caminos_BDModel.FK_Название_танцев_Оплата", "Оплата", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Наличие_авто")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Наличие_авто : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Наличие_авто.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        public static Наличие_авто CreateНаличие_авто(global::System.Int32 код)
        {
            Наличие_авто наличие_авто = new Наличие_авто();
            наличие_авто.Код = код;
            return наличие_авто;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ФИО
        {
            get
            {
                return _ФИО;
            }
            set
            {
                OnФИОChanging(value);
                ReportPropertyChanging("ФИО");
                _ФИО = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ФИО");
                OnФИОChanged();
            }
        }
        private Nullable<global::System.Int32> _ФИО;
        partial void OnФИОChanging(Nullable<global::System.Int32> value);
        partial void OnФИОChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "Мероприятия_FK01", "Мероприятия")]
        public EntityCollection<Мероприятия> Мероприятия
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Мероприятия>("Cuatro_Caminos_BDModel.Мероприятия_FK01", "Мероприятия");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Мероприятия>("Cuatro_Caminos_BDModel.Мероприятия_FK01", "Мероприятия", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Оплата")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Оплата : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Оплата.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        /// <param name="дата_оплаты">Исходное значение свойства Дата_оплаты.</param>
        /// <param name="код_Ученика">Исходное значение свойства Код_Ученика.</param>
        /// <param name="месяц">Исходное значение свойства Месяц.</param>
        /// <param name="сумма">Исходное значение свойства Сумма.</param>
        /// <param name="преподаватель">Исходное значение свойства Преподаватель.</param>
        /// <param name="название_танца">Исходное значение свойства Название_танца.</param>
        /// <param name="loginRecId">Исходное значение свойства LoginRecId.</param>
        public static Оплата CreateОплата(global::System.Int32 код, global::System.DateTime дата_оплаты, global::System.Int32 код_Ученика, global::System.Int32 месяц, global::System.Int32 сумма, global::System.Int32 преподаватель, global::System.Int32 название_танца, global::System.Int32 loginRecId)
        {
            Оплата оплата = new Оплата();
            оплата.Код = код;
            оплата.Дата_оплаты = дата_оплаты;
            оплата.Код_Ученика = код_Ученика;
            оплата.Месяц = месяц;
            оплата.Сумма = сумма;
            оплата.Преподаватель = преподаватель;
            оплата.Название_танца = название_танца;
            оплата.LoginRecId = loginRecId;
            return оплата;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Дата_оплаты
        {
            get
            {
                return _Дата_оплаты;
            }
            set
            {
                OnДата_оплатыChanging(value);
                ReportPropertyChanging("Дата_оплаты");
                _Дата_оплаты = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_оплаты");
                OnДата_оплатыChanged();
            }
        }
        private global::System.DateTime _Дата_оплаты;
        partial void OnДата_оплатыChanging(global::System.DateTime value);
        partial void OnДата_оплатыChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код_Ученика
        {
            get
            {
                return _Код_Ученика;
            }
            set
            {
                OnКод_УченикаChanging(value);
                ReportPropertyChanging("Код_Ученика");
                _Код_Ученика = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Код_Ученика");
                OnКод_УченикаChanged();
            }
        }
        private global::System.Int32 _Код_Ученика;
        partial void OnКод_УченикаChanging(global::System.Int32 value);
        partial void OnКод_УченикаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Месяц
        {
            get
            {
                return _Месяц;
            }
            set
            {
                OnМесяцChanging(value);
                ReportPropertyChanging("Месяц");
                _Месяц = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Месяц");
                OnМесяцChanged();
            }
        }
        private global::System.Int32 _Месяц;
        partial void OnМесяцChanging(global::System.Int32 value);
        partial void OnМесяцChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Сумма
        {
            get
            {
                return _Сумма;
            }
            set
            {
                OnСуммаChanging(value);
                ReportPropertyChanging("Сумма");
                _Сумма = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Сумма");
                OnСуммаChanged();
            }
        }
        private global::System.Int32 _Сумма;
        partial void OnСуммаChanging(global::System.Int32 value);
        partial void OnСуммаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Примечание
        {
            get
            {
                return _Примечание;
            }
            set
            {
                OnПримечаниеChanging(value);
                ReportPropertyChanging("Примечание");
                _Примечание = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Примечание");
                OnПримечаниеChanged();
            }
        }
        private global::System.String _Примечание;
        partial void OnПримечаниеChanging(global::System.String value);
        partial void OnПримечаниеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Преподаватель
        {
            get
            {
                return _Преподаватель;
            }
            set
            {
                OnПреподавательChanging(value);
                ReportPropertyChanging("Преподаватель");
                _Преподаватель = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Преподаватель");
                OnПреподавательChanged();
            }
        }
        private global::System.Int32 _Преподаватель;
        partial void OnПреподавательChanging(global::System.Int32 value);
        partial void OnПреподавательChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Название_танца
        {
            get
            {
                return _Название_танца;
            }
            set
            {
                OnНазвание_танцаChanging(value);
                ReportPropertyChanging("Название_танца");
                _Название_танца = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Название_танца");
                OnНазвание_танцаChanged();
            }
        }
        private global::System.Int32 _Название_танца;
        partial void OnНазвание_танцаChanging(global::System.Int32 value);
        partial void OnНазвание_танцаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] upsize_ts
        {
            get
            {
                return StructuralObject.GetValidValue(_upsize_ts);
            }
            set
            {
                Onupsize_tsChanging(value);
                ReportPropertyChanging("upsize_ts");
                _upsize_ts = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("upsize_ts");
                Onupsize_tsChanged();
            }
        }
        private global::System.Byte[] _upsize_ts;
        partial void Onupsize_tsChanging(global::System.Byte[] value);
        partial void Onupsize_tsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoginRecId
        {
            get
            {
                return _LoginRecId;
            }
            set
            {
                OnLoginRecIdChanging(value);
                ReportPropertyChanging("LoginRecId");
                _LoginRecId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoginRecId");
                OnLoginRecIdChanged();
            }
        }
        private global::System.Int32 _LoginRecId;
        partial void OnLoginRecIdChanging(global::System.Int32 value);
        partial void OnLoginRecIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateTimeRec
        {
            get
            {
                return _DateTimeRec;
            }
            set
            {
                OnDateTimeRecChanging(value);
                ReportPropertyChanging("DateTimeRec");
                _DateTimeRec = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeRec");
                OnDateTimeRecChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateTimeRec;
        partial void OnDateTimeRecChanging(Nullable<global::System.DateTime> value);
        partial void OnDateTimeRecChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Visits
        {
            get
            {
                return _Visits;
            }
            set
            {
                OnVisitsChanging(value);
                ReportPropertyChanging("Visits");
                _Visits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Visits");
                OnVisitsChanged();
            }
        }
        private Nullable<global::System.Int32> _Visits;
        partial void OnVisitsChanging(Nullable<global::System.Int32> value);
        partial void OnVisitsChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Имена_Преподавателей", "Имена_преподавателей")]
        public Имена_преподавателей Имена_преподавателей
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Имена_преподавателей>("Cuatro_Caminos_BDModel.FK_Имена_Преподавателей", "Имена_преподавателей").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Имена_преподавателей>("Cuatro_Caminos_BDModel.FK_Имена_Преподавателей", "Имена_преподавателей").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Имена_преподавателей> Имена_преподавателейReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Имена_преподавателей>("Cuatro_Caminos_BDModel.FK_Имена_Преподавателей", "Имена_преподавателей");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Имена_преподавателей>("Cuatro_Caminos_BDModel.FK_Имена_Преподавателей", "Имена_преподавателей", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Название_месяцев", "Название_месяцев")]
        public Название_месяцев Название_месяцев
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Название_месяцев>("Cuatro_Caminos_BDModel.FK_Название_месяцев", "Название_месяцев").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Название_месяцев>("Cuatro_Caminos_BDModel.FK_Название_месяцев", "Название_месяцев").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Название_месяцев> Название_месяцевReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Название_месяцев>("Cuatro_Caminos_BDModel.FK_Название_месяцев", "Название_месяцев");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Название_месяцев>("Cuatro_Caminos_BDModel.FK_Название_месяцев", "Название_месяцев", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Название_танцев_Оплата", "Названия_танцев")]
        public Названия_танцев Названия_танцев
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_Название_танцев_Оплата", "Названия_танцев").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_Название_танцев_Оплата", "Названия_танцев").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Названия_танцев> Названия_танцевReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_Название_танцев_Оплата", "Названия_танцев");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Названия_танцев>("Cuatro_Caminos_BDModel.FK_Название_танцев_Оплата", "Названия_танцев", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Оплата_Списки_людей", "Списки_людей")]
        public Списки_людей Списки_людей
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Оплата_Списки_людей", "Списки_людей").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Оплата_Списки_людей", "Списки_людей").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Списки_людей> Списки_людейReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Оплата_Списки_людей", "Списки_людей");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Оплата_Списки_людей", "Списки_людей", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Оплата_Списки_людей_Login", "Списки_людей")]
        public Списки_людей Списки_людей1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Оплата_Списки_людей_Login", "Списки_людей").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Оплата_Списки_людей_Login", "Списки_людей").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Списки_людей> Списки_людей1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Оплата_Списки_людей_Login", "Списки_людей");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_Оплата_Списки_людей_Login", "Списки_людей", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Организации")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Организации : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Организации.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        public static Организации CreateОрганизации(global::System.Int32 код)
        {
            Организации организации = new Организации();
            организации.Код = код;
            return организации;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Название_организации
        {
            get
            {
                return _Название_организации;
            }
            set
            {
                OnНазвание_организацииChanging(value);
                ReportPropertyChanging("Название_организации");
                _Название_организации = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Название_организации");
                OnНазвание_организацииChanged();
            }
        }
        private global::System.String _Название_организации;
        partial void OnНазвание_организацииChanging(global::System.String value);
        partial void OnНазвание_организацииChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Адрес
        {
            get
            {
                return _Адрес;
            }
            set
            {
                OnАдресChanging(value);
                ReportPropertyChanging("Адрес");
                _Адрес = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Адрес");
                OnАдресChanged();
            }
        }
        private global::System.String _Адрес;
        partial void OnАдресChanging(global::System.String value);
        partial void OnАдресChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Скидка
        {
            get
            {
                return _Скидка;
            }
            set
            {
                OnСкидкаChanging(value);
                ReportPropertyChanging("Скидка");
                _Скидка = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Скидка");
                OnСкидкаChanged();
            }
        }
        private Nullable<global::System.Int32> _Скидка;
        partial void OnСкидкаChanging(Nullable<global::System.Int32> value);
        partial void OnСкидкаChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "Контактные_лица_FK00", "Контактные_лица")]
        public EntityCollection<Контактные_лица> Контактные_лица
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Контактные_лица>("Cuatro_Caminos_BDModel.Контактные_лица_FK00", "Контактные_лица");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Контактные_лица>("Cuatro_Caminos_BDModel.Контактные_лица_FK00", "Контактные_лица", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "Цены_FK00", "Цены")]
        public EntityCollection<Цены> Цены
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Цены>("Cuatro_Caminos_BDModel.Цены_FK00", "Цены");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Цены>("Cuatro_Caminos_BDModel.Цены_FK00", "Цены", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Списки_людей")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Списки_людей : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Списки_людей.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        /// <param name="sMS">Исходное значение свойства SMS.</param>
        /// <param name="вконтекте">Исходное значение свойства Вконтекте.</param>
        /// <param name="участие_в_выступлениях">Исходное значение свойства Участие_в_выступлениях.</param>
        /// <param name="пол">Исходное значение свойства Пол.</param>
        /// <param name="выбыл_из_школы">Исходное значение свойства Выбыл_из_школы.</param>
        /// <param name="не_печатать">Исходное значение свойства Не_печатать.</param>
        /// <param name="студент">Исходное значение свойства Студент.</param>
        /// <param name="наличие_авто">Исходное значение свойства Наличие_авто.</param>
        /// <param name="loginRecId">Исходное значение свойства LoginRecId.</param>
        public static Списки_людей CreateСписки_людей(global::System.Int32 код, global::System.Int32 sMS, global::System.Boolean вконтекте, global::System.Boolean участие_в_выступлениях, global::System.String пол, global::System.Boolean выбыл_из_школы, global::System.Boolean не_печатать, global::System.Boolean студент, global::System.Boolean наличие_авто, global::System.Int32 loginRecId)
        {
            Списки_людей списки_людей = new Списки_людей();
            списки_людей.Код = код;
            списки_людей.SMS = sMS;
            списки_людей.Вконтекте = вконтекте;
            списки_людей.Участие_в_выступлениях = участие_в_выступлениях;
            списки_людей.Пол = пол;
            списки_людей.Выбыл_из_школы = выбыл_из_школы;
            списки_людей.Не_печатать = не_печатать;
            списки_людей.Студент = студент;
            списки_людей.Наличие_авто = наличие_авто;
            списки_людей.LoginRecId = loginRecId;
            return списки_людей;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Дата_регистрации
        {
            get
            {
                return _Дата_регистрации;
            }
            set
            {
                OnДата_регистрацииChanging(value);
                ReportPropertyChanging("Дата_регистрации");
                _Дата_регистрации = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_регистрации");
                OnДата_регистрацииChanged();
            }
        }
        private Nullable<global::System.DateTime> _Дата_регистрации;
        partial void OnДата_регистрацииChanging(Nullable<global::System.DateTime> value);
        partial void OnДата_регистрацииChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Фамилия
        {
            get
            {
                return _Фамилия;
            }
            set
            {
                OnФамилияChanging(value);
                ReportPropertyChanging("Фамилия");
                _Фамилия = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Фамилия");
                OnФамилияChanged();
            }
        }
        private global::System.String _Фамилия;
        partial void OnФамилияChanging(global::System.String value);
        partial void OnФамилияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Имя
        {
            get
            {
                return _Имя;
            }
            set
            {
                OnИмяChanging(value);
                ReportPropertyChanging("Имя");
                _Имя = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Имя");
                OnИмяChanged();
            }
        }
        private global::System.String _Имя;
        partial void OnИмяChanging(global::System.String value);
        partial void OnИмяChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Отчество
        {
            get
            {
                return _Отчество;
            }
            set
            {
                OnОтчествоChanging(value);
                ReportPropertyChanging("Отчество");
                _Отчество = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Отчество");
                OnОтчествоChanged();
            }
        }
        private global::System.String _Отчество;
        partial void OnОтчествоChanging(global::System.String value);
        partial void OnОтчествоChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Дата_рождения
        {
            get
            {
                return _Дата_рождения;
            }
            set
            {
                OnДата_рожденияChanging(value);
                ReportPropertyChanging("Дата_рождения");
                _Дата_рождения = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_рождения");
                OnДата_рожденияChanged();
            }
        }
        private Nullable<global::System.DateTime> _Дата_рождения;
        partial void OnДата_рожденияChanging(Nullable<global::System.DateTime> value);
        partial void OnДата_рожденияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Район
        {
            get
            {
                return _Район;
            }
            set
            {
                OnРайонChanging(value);
                ReportPropertyChanging("Район");
                _Район = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Район");
                OnРайонChanged();
            }
        }
        private Nullable<global::System.Int32> _Район;
        partial void OnРайонChanging(Nullable<global::System.Int32> value);
        partial void OnРайонChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Телефон
        {
            get
            {
                return _Телефон;
            }
            set
            {
                OnТелефонChanging(value);
                ReportPropertyChanging("Телефон");
                _Телефон = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Телефон");
                OnТелефонChanged();
            }
        }
        private global::System.String _Телефон;
        partial void OnТелефонChanging(global::System.String value);
        partial void OnТелефонChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SMS
        {
            get
            {
                return _SMS;
            }
            set
            {
                OnSMSChanging(value);
                ReportPropertyChanging("SMS");
                _SMS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SMS");
                OnSMSChanged();
            }
        }
        private global::System.Int32 _SMS;
        partial void OnSMSChanging(global::System.Int32 value);
        partial void OnSMSChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String e_mail
        {
            get
            {
                return _e_mail;
            }
            set
            {
                One_mailChanging(value);
                ReportPropertyChanging("e_mail");
                _e_mail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("e_mail");
                One_mailChanged();
            }
        }
        private global::System.String _e_mail;
        partial void One_mailChanging(global::System.String value);
        partial void One_mailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Вконтекте
        {
            get
            {
                return _Вконтекте;
            }
            set
            {
                OnВконтектеChanging(value);
                ReportPropertyChanging("Вконтекте");
                _Вконтекте = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Вконтекте");
                OnВконтектеChanged();
            }
        }
        private global::System.Boolean _Вконтекте;
        partial void OnВконтектеChanging(global::System.Boolean value);
        partial void OnВконтектеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String От_куда_узнал_а_
        {
            get
            {
                return _От_куда_узнал_а_;
            }
            set
            {
                OnОт_куда_узнал_а_Changing(value);
                ReportPropertyChanging("От_куда_узнал_а_");
                _От_куда_узнал_а_ = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("От_куда_узнал_а_");
                OnОт_куда_узнал_а_Changed();
            }
        }
        private global::System.String _От_куда_узнал_а_;
        partial void OnОт_куда_узнал_а_Changing(global::System.String value);
        partial void OnОт_куда_узнал_а_Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Хобби
        {
            get
            {
                return _Хобби;
            }
            set
            {
                OnХоббиChanging(value);
                ReportPropertyChanging("Хобби");
                _Хобби = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Хобби");
                OnХоббиChanged();
            }
        }
        private global::System.String _Хобби;
        partial void OnХоббиChanging(global::System.String value);
        partial void OnХоббиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Участие_в_выступлениях
        {
            get
            {
                return _Участие_в_выступлениях;
            }
            set
            {
                OnУчастие_в_выступленияхChanging(value);
                ReportPropertyChanging("Участие_в_выступлениях");
                _Участие_в_выступлениях = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Участие_в_выступлениях");
                OnУчастие_в_выступленияхChanged();
            }
        }
        private global::System.Boolean _Участие_в_выступлениях;
        partial void OnУчастие_в_выступленияхChanging(global::System.Boolean value);
        partial void OnУчастие_в_выступленияхChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Примечание
        {
            get
            {
                return _Примечание;
            }
            set
            {
                OnПримечаниеChanging(value);
                ReportPropertyChanging("Примечание");
                _Примечание = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Примечание");
                OnПримечаниеChanged();
            }
        }
        private global::System.String _Примечание;
        partial void OnПримечаниеChanging(global::System.String value);
        partial void OnПримечаниеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Школы
        {
            get
            {
                return _Школы;
            }
            set
            {
                OnШколыChanging(value);
                ReportPropertyChanging("Школы");
                _Школы = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Школы");
                OnШколыChanged();
            }
        }
        private Nullable<global::System.Int32> _Школы;
        partial void OnШколыChanging(Nullable<global::System.Int32> value);
        partial void OnШколыChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Пол
        {
            get
            {
                return _Пол;
            }
            set
            {
                OnПолChanging(value);
                ReportPropertyChanging("Пол");
                _Пол = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Пол");
                OnПолChanged();
            }
        }
        private global::System.String _Пол;
        partial void OnПолChanging(global::System.String value);
        partial void OnПолChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Выбыл_из_школы
        {
            get
            {
                return _Выбыл_из_школы;
            }
            set
            {
                OnВыбыл_из_школыChanging(value);
                ReportPropertyChanging("Выбыл_из_школы");
                _Выбыл_из_школы = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Выбыл_из_школы");
                OnВыбыл_из_школыChanged();
            }
        }
        private global::System.Boolean _Выбыл_из_школы;
        partial void OnВыбыл_из_школыChanging(global::System.Boolean value);
        partial void OnВыбыл_из_школыChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Кого_привел
        {
            get
            {
                return _Кого_привел;
            }
            set
            {
                OnКого_привелChanging(value);
                ReportPropertyChanging("Кого_привел");
                _Кого_привел = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Кого_привел");
                OnКого_привелChanged();
            }
        }
        private global::System.String _Кого_привел;
        partial void OnКого_привелChanging(global::System.String value);
        partial void OnКого_привелChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Дата_выбытия
        {
            get
            {
                return _Дата_выбытия;
            }
            set
            {
                OnДата_выбытияChanging(value);
                ReportPropertyChanging("Дата_выбытия");
                _Дата_выбытия = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_выбытия");
                OnДата_выбытияChanged();
            }
        }
        private Nullable<global::System.DateTime> _Дата_выбытия;
        partial void OnДата_выбытияChanging(Nullable<global::System.DateTime> value);
        partial void OnДата_выбытияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Не_печатать
        {
            get
            {
                return _Не_печатать;
            }
            set
            {
                OnНе_печататьChanging(value);
                ReportPropertyChanging("Не_печатать");
                _Не_печатать = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Не_печатать");
                OnНе_печататьChanged();
            }
        }
        private global::System.Boolean _Не_печатать;
        partial void OnНе_печататьChanging(global::System.Boolean value);
        partial void OnНе_печататьChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Кто_привел
        {
            get
            {
                return _Кто_привел;
            }
            set
            {
                OnКто_привелChanging(value);
                ReportPropertyChanging("Кто_привел");
                _Кто_привел = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Кто_привел");
                OnКто_привелChanged();
            }
        }
        private Nullable<global::System.Int32> _Кто_привел;
        partial void OnКто_привелChanging(Nullable<global::System.Int32> value);
        partial void OnКто_привелChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Студент
        {
            get
            {
                return _Студент;
            }
            set
            {
                OnСтудентChanging(value);
                ReportPropertyChanging("Студент");
                _Студент = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Студент");
                OnСтудентChanged();
            }
        }
        private global::System.Boolean _Студент;
        partial void OnСтудентChanging(global::System.Boolean value);
        partial void OnСтудентChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Семейная_пара
        {
            get
            {
                return _Семейная_пара;
            }
            set
            {
                OnСемейная_параChanging(value);
                ReportPropertyChanging("Семейная_пара");
                _Семейная_пара = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Семейная_пара");
                OnСемейная_параChanged();
            }
        }
        private Nullable<global::System.Int32> _Семейная_пара;
        partial void OnСемейная_параChanging(Nullable<global::System.Int32> value);
        partial void OnСемейная_параChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Наличие_авто
        {
            get
            {
                return _Наличие_авто;
            }
            set
            {
                OnНаличие_автоChanging(value);
                ReportPropertyChanging("Наличие_авто");
                _Наличие_авто = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Наличие_авто");
                OnНаличие_автоChanged();
            }
        }
        private global::System.Boolean _Наличие_авто;
        partial void OnНаличие_автоChanging(global::System.Boolean value);
        partial void OnНаличие_автоChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] upsize_ts
        {
            get
            {
                return StructuralObject.GetValidValue(_upsize_ts);
            }
            set
            {
                Onupsize_tsChanging(value);
                ReportPropertyChanging("upsize_ts");
                _upsize_ts = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("upsize_ts");
                Onupsize_tsChanged();
            }
        }
        private global::System.Byte[] _upsize_ts;
        partial void Onupsize_tsChanging(global::System.Byte[] value);
        partial void Onupsize_tsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoginRecId
        {
            get
            {
                return _LoginRecId;
            }
            set
            {
                OnLoginRecIdChanging(value);
                ReportPropertyChanging("LoginRecId");
                _LoginRecId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoginRecId");
                OnLoginRecIdChanged();
            }
        }
        private global::System.Int32 _LoginRecId;
        partial void OnLoginRecIdChanging(global::System.Int32 value);
        partial void OnLoginRecIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateTimeRec
        {
            get
            {
                return _DateTimeRec;
            }
            set
            {
                OnDateTimeRecChanging(value);
                ReportPropertyChanging("DateTimeRec");
                _DateTimeRec = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeRec");
                OnDateTimeRecChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateTimeRec;
        partial void OnDateTimeRecChanging(Nullable<global::System.DateTime> value);
        partial void OnDateTimeRecChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Administrators_Списки_людей", "Administrators")]
        public EntityCollection<Administrators> Administrators
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Administrators>("Cuatro_Caminos_BDModel.FK_Administrators_Списки_людей", "Administrators");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Administrators>("Cuatro_Caminos_BDModel.FK_Administrators_Списки_людей", "Administrators", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Cash_Списки_людей", "Cash")]
        public EntityCollection<Cash> Cash
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cash>("Cuatro_Caminos_BDModel.FK_Cash_Списки_людей", "Cash");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cash>("Cuatro_Caminos_BDModel.FK_Cash_Списки_людей", "Cash", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Notes_Списки_людей", "Notes")]
        public EntityCollection<Notes> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Notes>("Cuatro_Caminos_BDModel.FK_Notes_Списки_людей", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Notes>("Cuatro_Caminos_BDModel.FK_Notes_Списки_людей", "Notes", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Visits_Списки_людей", "Visits")]
        public EntityCollection<Visits> Visits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Visits>("Cuatro_Caminos_BDModel.FK_Visits_Списки_людей", "Visits");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Visits>("Cuatro_Caminos_BDModel.FK_Visits_Списки_людей", "Visits", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Sms", "Название_SMS")]
        public Название_SMS Название_SMS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Название_SMS>("Cuatro_Caminos_BDModel.FK_Sms", "Название_SMS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Название_SMS>("Cuatro_Caminos_BDModel.FK_Sms", "Название_SMS").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Название_SMS> Название_SMSReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Название_SMS>("Cuatro_Caminos_BDModel.FK_Sms", "Название_SMS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Название_SMS>("Cuatro_Caminos_BDModel.FK_Sms", "Название_SMS", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK03_Районы", "Название_района")]
        public Название_района Название_района
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Название_района>("Cuatro_Caminos_BDModel.FK03_Районы", "Название_района").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Название_района>("Cuatro_Caminos_BDModel.FK03_Районы", "Название_района").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Название_района> Название_районаReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Название_района>("Cuatro_Caminos_BDModel.FK03_Районы", "Название_района");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Название_района>("Cuatro_Caminos_BDModel.FK03_Районы", "Название_района", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK04_Школы", "Название_школ")]
        public Название_школ Название_школ
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Название_школ>("Cuatro_Caminos_BDModel.FK04_Школы", "Название_школ").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Название_школ>("Cuatro_Caminos_BDModel.FK04_Школы", "Название_школ").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Название_школ> Название_школReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Название_школ>("Cuatro_Caminos_BDModel.FK04_Школы", "Название_школ");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Название_школ>("Cuatro_Caminos_BDModel.FK04_Школы", "Название_школ", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Оплата_Списки_людей", "Оплата")]
        public EntityCollection<Оплата> Оплата
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Оплата>("Cuatro_Caminos_BDModel.FK_Оплата_Списки_людей", "Оплата");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Оплата>("Cuatro_Caminos_BDModel.FK_Оплата_Списки_людей", "Оплата", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_Оплата_Списки_людей_Login", "Оплата")]
        public EntityCollection<Оплата> Оплата1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Оплата>("Cuatro_Caminos_BDModel.FK_Оплата_Списки_людей_Login", "Оплата");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Оплата>("Cuatro_Caminos_BDModel.FK_Оплата_Списки_людей_Login", "Оплата", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_СписокНаМероприятие_Списки_людей", "СписокНаМероприятие")]
        public EntityCollection<СписокНаМероприятие> СписокНаМероприятие
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<СписокНаМероприятие>("Cuatro_Caminos_BDModel.FK_СписокНаМероприятие_Списки_людей", "СписокНаМероприятие");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<СписокНаМероприятие>("Cuatro_Caminos_BDModel.FK_СписокНаМероприятие_Списки_людей", "СписокНаМероприятие", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Список_дат")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Список_дат : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Список_дат.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        public static Список_дат CreateСписок_дат(global::System.Int32 код)
        {
            Список_дат список_дат = new Список_дат();
            список_дат.Код = код;
            return список_дат;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Дата
        {
            get
            {
                return _Дата;
            }
            set
            {
                OnДатаChanging(value);
                ReportPropertyChanging("Дата");
                _Дата = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата");
                OnДатаChanged();
            }
        }
        private Nullable<global::System.DateTime> _Дата;
        partial void OnДатаChanging(Nullable<global::System.DateTime> value);
        partial void OnДатаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Месяц
        {
            get
            {
                return _Месяц;
            }
            set
            {
                OnМесяцChanging(value);
                ReportPropertyChanging("Месяц");
                _Месяц = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Месяц");
                OnМесяцChanged();
            }
        }
        private Nullable<global::System.Int16> _Месяц;
        partial void OnМесяцChanging(Nullable<global::System.Int16> value);
        partial void OnМесяцChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Год
        {
            get
            {
                return _Год;
            }
            set
            {
                OnГодChanging(value);
                ReportPropertyChanging("Год");
                _Год = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Год");
                OnГодChanged();
            }
        }
        private Nullable<global::System.Int16> _Год;
        partial void OnГодChanging(Nullable<global::System.Int16> value);
        partial void OnГодChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Список_лет")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Список_лет : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Список_лет.
        /// </summary>
        /// <param name="год">Исходное значение свойства Год.</param>
        public static Список_лет CreateСписок_лет(global::System.Int16 год)
        {
            Список_лет список_лет = new Список_лет();
            список_лет.Год = год;
            return список_лет;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Год
        {
            get
            {
                return _Год;
            }
            set
            {
                if (_Год != value)
                {
                    OnГодChanging(value);
                    ReportPropertyChanging("Год");
                    _Год = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Год");
                    OnГодChanged();
                }
            }
        }
        private global::System.Int16 _Год;
        partial void OnГодChanging(global::System.Int16 value);
        partial void OnГодChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Список_месяцев")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Список_месяцев : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Список_месяцев.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        public static Список_месяцев CreateСписок_месяцев(global::System.Int32 код)
        {
            Список_месяцев список_месяцев = new Список_месяцев();
            список_месяцев.Код = код;
            return список_месяцев;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Месяц
        {
            get
            {
                return _Месяц;
            }
            set
            {
                OnМесяцChanging(value);
                ReportPropertyChanging("Месяц");
                _Месяц = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Месяц");
                OnМесяцChanged();
            }
        }
        private global::System.String _Месяц;
        partial void OnМесяцChanging(global::System.String value);
        partial void OnМесяцChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="СписокНаМероприятие")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class СписокНаМероприятие : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта СписокНаМероприятие.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="peopleId">Исходное значение свойства PeopleId.</param>
        /// <param name="мероприятеID">Исходное значение свойства МероприятеID.</param>
        /// <param name="avto">Исходное значение свойства Avto.</param>
        /// <param name="ok">Исходное значение свойства Ok.</param>
        /// <param name="dataTimeCreate">Исходное значение свойства DataTimeCreate.</param>
        /// <param name="liginRecId">Исходное значение свойства LiginRecId.</param>
        public static СписокНаМероприятие CreateСписокНаМероприятие(global::System.Int32 id, global::System.Int32 peopleId, global::System.Int32 мероприятеID, global::System.Boolean avto, global::System.Boolean ok, global::System.DateTime dataTimeCreate, global::System.Int32 liginRecId)
        {
            СписокНаМероприятие списокНаМероприятие = new СписокНаМероприятие();
            списокНаМероприятие.Id = id;
            списокНаМероприятие.PeopleId = peopleId;
            списокНаМероприятие.МероприятеID = мероприятеID;
            списокНаМероприятие.Avto = avto;
            списокНаМероприятие.Ok = ok;
            списокНаМероприятие.DataTimeCreate = dataTimeCreate;
            списокНаМероприятие.LiginRecId = liginRecId;
            return списокНаМероприятие;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeopleId
        {
            get
            {
                return _PeopleId;
            }
            set
            {
                OnPeopleIdChanging(value);
                ReportPropertyChanging("PeopleId");
                _PeopleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeopleId");
                OnPeopleIdChanged();
            }
        }
        private global::System.Int32 _PeopleId;
        partial void OnPeopleIdChanging(global::System.Int32 value);
        partial void OnPeopleIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 МероприятеID
        {
            get
            {
                return _МероприятеID;
            }
            set
            {
                OnМероприятеIDChanging(value);
                ReportPropertyChanging("МероприятеID");
                _МероприятеID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("МероприятеID");
                OnМероприятеIDChanged();
            }
        }
        private global::System.Int32 _МероприятеID;
        partial void OnМероприятеIDChanging(global::System.Int32 value);
        partial void OnМероприятеIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Avto
        {
            get
            {
                return _Avto;
            }
            set
            {
                OnAvtoChanging(value);
                ReportPropertyChanging("Avto");
                _Avto = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Avto");
                OnAvtoChanged();
            }
        }
        private global::System.Boolean _Avto;
        partial void OnAvtoChanging(global::System.Boolean value);
        partial void OnAvtoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Pay
        {
            get
            {
                return _Pay;
            }
            set
            {
                OnPayChanging(value);
                ReportPropertyChanging("Pay");
                _Pay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Pay");
                OnPayChanged();
            }
        }
        private Nullable<global::System.Int32> _Pay;
        partial void OnPayChanging(Nullable<global::System.Int32> value);
        partial void OnPayChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Ok
        {
            get
            {
                return _Ok;
            }
            set
            {
                OnOkChanging(value);
                ReportPropertyChanging("Ok");
                _Ok = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ok");
                OnOkChanged();
            }
        }
        private global::System.Boolean _Ok;
        partial void OnOkChanging(global::System.Boolean value);
        partial void OnOkChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DataTimeCreate
        {
            get
            {
                return _DataTimeCreate;
            }
            set
            {
                OnDataTimeCreateChanging(value);
                ReportPropertyChanging("DataTimeCreate");
                _DataTimeCreate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataTimeCreate");
                OnDataTimeCreateChanged();
            }
        }
        private global::System.DateTime _DataTimeCreate;
        partial void OnDataTimeCreateChanging(global::System.DateTime value);
        partial void OnDataTimeCreateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LiginRecId
        {
            get
            {
                return _LiginRecId;
            }
            set
            {
                OnLiginRecIdChanging(value);
                ReportPropertyChanging("LiginRecId");
                _LiginRecId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LiginRecId");
                OnLiginRecIdChanged();
            }
        }
        private global::System.Int32 _LiginRecId;
        partial void OnLiginRecIdChanging(global::System.Int32 value);
        partial void OnLiginRecIdChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_СписокНаМероприятие_Название_мероприятий", "Название_мероприятий")]
        public Название_мероприятий Название_мероприятий
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Название_мероприятий>("Cuatro_Caminos_BDModel.FK_СписокНаМероприятие_Название_мероприятий", "Название_мероприятий").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Название_мероприятий>("Cuatro_Caminos_BDModel.FK_СписокНаМероприятие_Название_мероприятий", "Название_мероприятий").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Название_мероприятий> Название_мероприятийReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Название_мероприятий>("Cuatro_Caminos_BDModel.FK_СписокНаМероприятие_Название_мероприятий", "Название_мероприятий");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Название_мероприятий>("Cuatro_Caminos_BDModel.FK_СписокНаМероприятие_Название_мероприятий", "Название_мероприятий", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "FK_СписокНаМероприятие_Списки_людей", "Списки_людей")]
        public Списки_людей Списки_людей
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_СписокНаМероприятие_Списки_людей", "Списки_людей").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_СписокНаМероприятие_Списки_людей", "Списки_людей").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Списки_людей> Списки_людейReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_СписокНаМероприятие_Списки_людей", "Списки_людей");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Списки_людей>("Cuatro_Caminos_BDModel.FK_СписокНаМероприятие_Списки_людей", "Списки_людей", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="ТБ_Домики")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ТБ_Домики : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ТБ_Домики.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        public static ТБ_Домики CreateТБ_Домики(global::System.Int32 код)
        {
            ТБ_Домики тБ_Домики = new ТБ_Домики();
            тБ_Домики.Код = код;
            return тБ_Домики;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Название_организации
        {
            get
            {
                return _Название_организации;
            }
            set
            {
                OnНазвание_организацииChanging(value);
                ReportPropertyChanging("Название_организации");
                _Название_организации = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Название_организации");
                OnНазвание_организацииChanged();
            }
        }
        private Nullable<global::System.Int32> _Название_организации;
        partial void OnНазвание_организацииChanging(Nullable<global::System.Int32> value);
        partial void OnНазвание_организацииChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Кол_во_мест
        {
            get
            {
                return _Кол_во_мест;
            }
            set
            {
                OnКол_во_местChanging(value);
                ReportPropertyChanging("Кол_во_мест");
                _Кол_во_мест = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Кол_во_мест");
                OnКол_во_местChanged();
            }
        }
        private Nullable<global::System.Int32> _Кол_во_мест;
        partial void OnКол_во_местChanging(Nullable<global::System.Int32> value);
        partial void OnКол_во_местChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Организация
        {
            get
            {
                return _Организация;
            }
            set
            {
                OnОрганизацияChanging(value);
                ReportPropertyChanging("Организация");
                _Организация = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Организация");
                OnОрганизацияChanged();
            }
        }
        private Nullable<global::System.Int32> _Организация;
        partial void OnОрганизацияChanging(Nullable<global::System.Int32> value);
        partial void OnОрганизацияChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cuatro_Caminos_BDModel", Name="Цены")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Цены : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Цены.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        public static Цены CreateЦены(global::System.Int32 код)
        {
            Цены цены = new Цены();
            цены.Код = код;
            return цены;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Название_организации
        {
            get
            {
                return _Название_организации;
            }
            set
            {
                OnНазвание_организацииChanging(value);
                ReportPropertyChanging("Название_организации");
                _Название_организации = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Название_организации");
                OnНазвание_организацииChanged();
            }
        }
        private Nullable<global::System.Int32> _Название_организации;
        partial void OnНазвание_организацииChanging(Nullable<global::System.Int32> value);
        partial void OnНазвание_организацииChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String C__домика
        {
            get
            {
                return _C__домика;
            }
            set
            {
                OnC__домикаChanging(value);
                ReportPropertyChanging("C__домика");
                _C__домика = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("C__домика");
                OnC__домикаChanged();
            }
        }
        private global::System.String _C__домика;
        partial void OnC__домикаChanging(global::System.String value);
        partial void OnC__домикаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Цена
        {
            get
            {
                return _Цена;
            }
            set
            {
                OnЦенаChanging(value);
                ReportPropertyChanging("Цена");
                _Цена = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Цена");
                OnЦенаChanged();
            }
        }
        private Nullable<global::System.Decimal> _Цена;
        partial void OnЦенаChanging(Nullable<global::System.Decimal> value);
        partial void OnЦенаChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cuatro_Caminos_BDModel", "Цены_FK00", "Организации")]
        public Организации Организации
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Организации>("Cuatro_Caminos_BDModel.Цены_FK00", "Организации").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Организации>("Cuatro_Caminos_BDModel.Цены_FK00", "Организации").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Организации> ОрганизацииReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Организации>("Cuatro_Caminos_BDModel.Цены_FK00", "Организации");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Организации>("Cuatro_Caminos_BDModel.Цены_FK00", "Организации", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
